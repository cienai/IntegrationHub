table cal_end_dates
	lineageTag: 0c87fa54-b3b7-47c2-9154-a95fcfb4b586

	measure 'meas.filter_string_full' = ```
			
			
			var max_filters =15
			var date_str =  "Date: " & Min(cal_end_dates[Date])  & " - " &  Max(cal_end_dates[Date] )
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var user_role_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x, "User Role: All"
			)
			
			var userfunction_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_function]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_function] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_function] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_function], ", " )
			    VAR ___x = "User Role Function: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role Function: All"
			)
			
			var dept_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_dept]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_dept] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_dept] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_dept], ", " )
			    VAR ___x = "Department: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Department: All"
			)
			
			var mgrtotreports_str = IF ( 
			    ISFILTERED ( managers_total[trueai_full_name]), 
			    VAR ___f = FILTERS ( managers_total [trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, managers_total [trueai_full_name])
			    VAR ___d = CONCATENATEX ( ___t, managers_total [trueai_full_name], ", " )
			    VAR ___x = "Mgr. - All Reports: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Mgr. - All Reports: All"
			)
			
			var mgrdirreports_str = IF ( 
			    ISFILTERED ( managers_direct[trueai_full_name]), 
			    VAR ___f = FILTERS ( managers_direct [trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, managers_direct [trueai_full_name] )
			    VAR ___d = CONCATENATEX ( ___t, managers_direct [trueai_full_name], ", " )
			    VAR ___x = "Mgr. - Only Direct Reports: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Mgr. - Only Direct Reports: All"
			)
			
			var username_str = IF ( 
			    ISFILTERED ( users[trueai_full_name]), 
			    VAR ___f = FILTERS ( users[trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_full_name] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_full_name], ", " )
			    VAR ___x = "User Name: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Name: All"
			)
			
			//var d =  ISFILTERED  (users[trueai_hire_date].[Year]) // CONCATENATEX(FILTERS ( users[trueai_hire_date]), users[trueai_hire_date], ", " )
			
			var rephireyear_str = IF ( 
			    ISFILTERED ( users[trueai_hire_date].[Year]), 
			    VAR ___f = FILTERS ( users[trueai_hire_date].[Year]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_hire_date].[Year] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_hire_date].[Year], ", " )
			    VAR ___x = "User Hire Year: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Hire Year: All"
			)
			
			var reptermyear_str = IF ( 
			    ISFILTERED ( users[trueai_termination_date].[Year]), 
			    VAR ___f = FILTERS ( users[trueai_termination_date].[Year]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_termination_date].[Year] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_termination_date].[Year], ", " )
			    VAR ___x = "User Termination Year: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Termination Year: All"
			)
			
			var reploccountry_str = IF ( 
			    ISFILTERED ( users[trueai_addr_country]), 
			    VAR ___f = FILTERS ( users[trueai_addr_country]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_country] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_country], ", " )
			    VAR ___x = "User Location Country: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location Country: All"
			)
			
			var replocstate_str = IF ( 
			    ISFILTERED ( users[trueai_addr_state]), 
			    VAR ___f = FILTERS ( users[trueai_addr_state]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_state] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_state], ", " )
			    VAR ___x = "User Location State: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location State: All"
			)
			
			var reploccity_str = IF ( 
			    ISFILTERED ( users[trueai_addr_city]), 
			    VAR ___f = FILTERS ( users[trueai_addr_city]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_city] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_city], ", " )
			    VAR ___x = "User Location City: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location City: All"
			)
			
			var stepname_str = IF ( 
			    ISFILTERED ( ssr_history[step_name]), 
			    VAR ___f = FILTERS ( ssr_history[step_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[step_name] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[step_name], ", " )
			    VAR ___x = "Sales Process Steps: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Sales Process Steps: All"
			)
			
			var substeps_str = IF ( 
			    ISFILTERED ( ssr_history[step_sub_type]), 
			    VAR ___f = FILTERS ( ssr_history[step_sub_type]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[step_sub_type] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[step_sub_type], ", " )
			    VAR ___x = "Sales Process Sub-Steps: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Sales Process Sub-Steps: All"
			)
			
			var industry_str = IF ( 
			    ISFILTERED ( ssr[trueai_industry]), 
			    VAR ___f = FILTERS ( ssr[trueai_industry]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[trueai_industry] )
			    VAR ___d = CONCATENATEX ( ___t, ssr[trueai_industry], ", " )
			    VAR ___x = "Industry: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Industry: All"
			)
			
			var country_str = IF ( 
			    ISFILTERED ( ssr[trueai_addr_country]), 
			    VAR ___f = FILTERS ( ssr[trueai_addr_country]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[trueai_addr_country] )
			    VAR ___d = CONCATENATEX ( ___t, ssr[trueai_addr_country], ", " )
			    VAR ___x = "Country: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Country: All"
			)
			
			var companysize_str = IF ( 
			    ISFILTERED ( ssr_company_sizes[trueai_company_size]), 
			    VAR ___f = FILTERS ( ssr_company_sizes[trueai_company_size]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_company_sizes[trueai_company_size])
			    VAR ___d = CONCATENATEX ( ___t, ssr_company_sizes[trueai_company_size], ", " )
			    VAR ___x = "Company Size: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Company Size: All"
			)
			
			var productfamily_str = IF ( 
			    ISFILTERED (products[trueai_family]), 
			    VAR ___f = FILTERS ( products[trueai_family]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, products[trueai_family])
			    VAR ___d = CONCATENATEX ( ___t, products[trueai_family], ", " )
			    VAR ___x = "Product Family: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Product Family: All"
			)
			
			var opp_erp_str = IF ( 
			    ISFILTERED ( ssr_history[opp_erp]), 
			    VAR ___f = FILTERS ( ssr_history[opp_erp] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[opp_erp] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[opp_erp], ", " )
			    VAR ___x = "ERP: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Opportunity ERP: All"
			)
			
			var opp_pipeline_name_str = IF ( 
			    ISFILTERED ( ssr_history[opp_pipeline_name] ), 
			    VAR ___f = FILTERS ( ssr_history[opp_pipeline_name] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[opp_pipeline_name] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[opp_pipeline_name], ", " )
			    VAR ___x = "Pipeline: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Opportunity Pipeline: All"
			)
			
			var crm_mtach_id_str = IF ( 
			    ISFILTERED (users[trueai_ext_match_id]), 
			    VAR ___f = FILTERS ( users[trueai_ext_match_id]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_ext_match_id])
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_ext_match_id], ", " )
			    VAR ___x = "HR Roster Matches Only: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "HR Roster Matches Only: All"
			)
			
			var _ssr_crm_leadsource = IF ( 
			    ISFILTERED ( ssr[crm_leadsource]), 
			    VAR ___f = FILTERS ( ssr[crm_leadsource]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[crm_leadsource])
			    VAR ___d = CONCATENATEX ( ___t, ssr[crm_leadsource], ", " )
			    VAR ___x = "Lead Source CRM Name: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x ," | "  &  "Lead Source CRM Name: All"
			)
			
			var _ssr_crm_leadsource_type = IF ( 
			    ISFILTERED ( ssr[col.trueai_leadsource_inbound_outbound]), 
			    VAR ___f = FILTERS ( ssr[col.trueai_leadsource_inbound_outbound]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[col.trueai_leadsource_inbound_outbound])
			    VAR ___d = CONCATENATEX ( ___t, ssr[col.trueai_leadsource_inbound_outbound], ", " )
			    VAR ___x = "Lead Source Type: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x ," | "  &  "Lead Source Type: All"
			)
			 
			var acc_custfield1_str = 
			IF(
			    [meas.aliasing_labels_accounts_cust_field_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_1]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f,  ssr[crm_account_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t,  ssr[crm_account_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_1] &" : All"
			    ),
			    "N/A"
			)
			
			var acc_custfield2_str =
			IF(
			    [meas.aliasing_labels_accounts_cust_field_2] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f,  ssr[crm_account_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t,  ssr[crm_account_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_2] & " : All"
			    ),
			    "N/A"
			)
			
			var acc_custfield3_str =IF(
			    [meas.aliasing_labels_accounts_cust_field_3] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr[crm_account_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr[crm_account_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_3] & " : All"
			    ),
			    "N/A"
			)
			
			
			var opp_custfield1_str = IF(
			    [meas.aliasing_labels_opps_cust_field_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_1]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_1] &" : All"
			    ),
			    "N/A"
			)
			
			var opp_custfield2_str = IF(
			    [meas.aliasing_labels_opps_cust_field_2] <>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_2] & " : All"
			    ),
			    "N/A"
			)
			
			var opp_custfield3_str = IF(
			    [meas.aliasing_labels_opps_cust_field_3]<>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_3] & " : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield1_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_1]), 
			        VAR ___f = FILTERS (ssr_history[entity_crm_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_1] &" : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield2_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_2] <>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_2] & " : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield3_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_3]<>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_3] & " : All"
			    ),
			    "N/A"
			)
			
			
			
			
			var res =  "When" & UNICHAR(13) & UNICHAR(10) & "  |  " & date_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) & "Who" & UNICHAR(13) & UNICHAR(10)  & " | "  &  group_str & UNICHAR(13) & UNICHAR(10) & "  |  " & user_role_str & UNICHAR(13) & UNICHAR(10) & " | "  &  userfunction_str & UNICHAR(13) & UNICHAR(10) & " | "  &  dept_str & UNICHAR(13) & UNICHAR(10) & " | "  &  mgrtotreports_str & UNICHAR(13) & UNICHAR(10) & " | "  &  mgrdirreports_str & UNICHAR(13) & UNICHAR(10) & " | "  &  username_str & UNICHAR(13) & UNICHAR(10) & " | "  &  rephireyear_str & UNICHAR(13) & UNICHAR(10) & " | "  &  reptermyear_str & UNICHAR(13) & UNICHAR(10) &  " | "  &  reploccountry_str & UNICHAR(13) & UNICHAR(10)  &  " | "  &  replocstate_str & UNICHAR(13) & UNICHAR(10) &   " | "  &  reploccity_str & UNICHAR(13) & UNICHAR(10) &   " | "  &  crm_mtach_id_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) 
			
			& "What" & UNICHAR(13) & UNICHAR(10) & 
			UNICHAR(13) & UNICHAR(10) &
			
			"Standardized Sales Process Steps" & UNICHAR(13) & UNICHAR(10) &
			" | " & stepname_str & UNICHAR(13) & UNICHAR(10) &
			" | " & substeps_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) &
			
			"Customer Segmentation" & UNICHAR(13) & UNICHAR(10) &
			" | "  &  industry_str & UNICHAR(13) & UNICHAR(10) &
			" | "  &  country_str & UNICHAR(13) & UNICHAR(10) &
			" | "  &  companysize_str & UNICHAR(13) & UNICHAR(10) &
			
			UNICHAR(13) & UNICHAR(10) &  _ssr_crm_leadsource &
			UNICHAR(13) & UNICHAR(10) &  _ssr_crm_leadsource_type &
			UNICHAR(13) & UNICHAR(10) &
			UNICHAR(13) & UNICHAR(10) &
			
			"Product " & UNICHAR(13) & UNICHAR(10) &
			" | "  &  productfamily_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) & 
			
			"(ERP/eCommerce) vs. Opps" & UNICHAR(13) & UNICHAR(10) &
			" | "  &  opp_erp_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) &
			
			"Pipeline" & UNICHAR(13) & UNICHAR(10) &
			" | "  &  opp_pipeline_name_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) &
			
			"Custom Fields" & UNICHAR(13) & UNICHAR(10) &
			
			"Leads : " &
			UNICHAR(13) & UNICHAR(10) & leads_custfield1_str &
			UNICHAR(13) & UNICHAR(10) &  leads_custfield2_str &
			UNICHAR(13) & UNICHAR(10) &  leads_custfield3_str &
			UNICHAR(13) & UNICHAR(10) &
			UNICHAR(13) & UNICHAR(10) &
			
			"Accounts: " &
			UNICHAR(13) & UNICHAR(10) & acc_custfield1_str &
			UNICHAR(13) & UNICHAR(10) &  acc_custfield2_str &
			UNICHAR(13) & UNICHAR(10) &  acc_custfield3_str &
			UNICHAR(13) & UNICHAR(10) &
			UNICHAR(13) & UNICHAR(10) &
			
			"Opportunities:" &
			UNICHAR(13) & UNICHAR(10) & opp_custfield1_str &
			UNICHAR(13) & UNICHAR(10) &  opp_custfield2_str &
			UNICHAR(13) & UNICHAR(10) &  opp_custfield3_str &
			UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10)
			
			return 
			res
			```
		displayFolder: _filter_helpers
		lineageTag: 3c24663e-f9df-402c-afeb-239cbdbf6b15

	measure 'DumpFilters cal_end_dates' = ```
			
			VAR MaxFilters = 3
			RETURN
			IF ( 
			    ISFILTERED ( cal_end_dates[Date] ), 
			    VAR ___f = FILTERS ( cal_end_dates[Date] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[Date] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[Date], ", " )
			    VAR ___x = "cal_end_dates[Date] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[date_as_integer] ), 
			    VAR ___f = FILTERS ( cal_end_dates[date_as_integer] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[date_as_integer] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[date_as_integer], ", " )
			    VAR ___x = "cal_end_dates[date_as_integer] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[day_of_week] ), 
			    VAR ___f = FILTERS ( cal_end_dates[day_of_week] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[day_of_week] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[day_of_week], ", " )
			    VAR ___x = "cal_end_dates[day_of_week] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[day_of_week_number] ), 
			    VAR ___f = FILTERS ( cal_end_dates[day_of_week_number] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[day_of_week_number] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[day_of_week_number], ", " )
			    VAR ___x = "cal_end_dates[day_of_week_number] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[day_of_week_short] ), 
			    VAR ___f = FILTERS ( cal_end_dates[day_of_week_short] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[day_of_week_short] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[day_of_week_short], ", " )
			    VAR ___x = "cal_end_dates[day_of_week_short] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[month_name_long] ), 
			    VAR ___f = FILTERS ( cal_end_dates[month_name_long] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[month_name_long] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[month_name_long], ", " )
			    VAR ___x = "cal_end_dates[month_name_long] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[month_name_short] ), 
			    VAR ___f = FILTERS ( cal_end_dates[month_name_short] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[month_name_short] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[month_name_short], ", " )
			    VAR ___x = "cal_end_dates[month_name_short] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[month_number] ), 
			    VAR ___f = FILTERS ( cal_end_dates[month_number] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[month_number] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[month_number], ", " )
			    VAR ___x = "cal_end_dates[month_number] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[quarter] ), 
			    VAR ___f = FILTERS ( cal_end_dates[quarter] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[quarter] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[quarter], ", " )
			    VAR ___x = "cal_end_dates[quarter] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[year] ), 
			    VAR ___f = FILTERS ( cal_end_dates[year] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[year] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[year], ", " )
			    VAR ___x = "cal_end_dates[year] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[year_month_number] ), 
			    VAR ___f = FILTERS ( cal_end_dates[year_month_number] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[year_month_number] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[year_month_number], ", " )
			    VAR ___x = "cal_end_dates[year_month_number] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[year_month_short] ), 
			    VAR ___f = FILTERS ( cal_end_dates[year_month_short] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[year_month_short] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[year_month_short], ", " )
			    VAR ___x = "cal_end_dates[year_month_short] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			 & IF ( 
			    ISFILTERED ( cal_end_dates[year_quarter] ), 
			    VAR ___f = FILTERS ( cal_end_dates[year_quarter] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( MaxFilters, ___f, cal_end_dates[year_quarter] )
			    VAR ___d = CONCATENATEX ( ___t, cal_end_dates[year_quarter], ", " )
			    VAR ___x = "cal_end_dates[year_quarter] = " & ___d & IF(___r > MaxFilters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x & UNICHAR(13) & UNICHAR(10)
			)
			
			```
		displayFolder: __needs_attention
		lineageTag: 53a59e30-5a64-4b49-8c66-ce6f79152608

	measure 'meas.dynamic_date_period' = ```
			Max(cal_end_dates[Date]) 
			```
		formatString: General Date
		displayFolder: __needs_attention
		lineageTag: e7904eee-f3a8-43c6-b6ec-758aaa9647ac

	measure 'meas.context_date_min' = CALCULATE(min([Date]))
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: 664001d6-8baa-437f-b358-0192734268cf

		changedProperty = FormatString

	measure 'meas.context_date_max' = CALCULATE(max([Date])) -- the max date of a period
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: 4e92afda-ceaf-42c9-8b98-7c09d1a8dccb

		changedProperty = FormatString

	measure 'meas.context_prev_period_max' = ```
			
			var period_start =  CALCULATE(min([Date]))
			var period_end =  CALCULATE(max([Date]))
			var period_in_months =  DATEDIFF(period_start, period_end + 1, month) * -1
			var prev_period_start = EDATE(period_start,period_in_months)
			var prev_period_end =   EDATE(period_end,period_in_months)
			var res = prev_period_end
			return res
			
			
			```
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: ff71e57c-ddd1-448e-9bc2-e103ffdbf5a8

		changedProperty = FormatString

	measure 'meas.context_prev_period_min' = ```
			
			var period_start =  CALCULATE(min([Date]))
			var period_end =  CALCULATE(max([Date]))
			var period_in_months =  DATEDIFF(period_start, period_end + 1, month) * -1
			var prev_period_start = EDATE(period_start,period_in_months)
			var prev_period_end =   EDATE(period_end,period_in_months)
			var res = prev_period_start
			return res
			
			
			```
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: 3dbf3f5d-68a8-426f-824b-75751aebb196

		changedProperty = FormatString

	measure 'meas.first_filt_date' = date(2010,01,01)
		formatString: General Date
		displayFolder: __needs_attention
		lineageTag: 8061d3ce-bc08-42a4-8ffa-8b0d7253cabe

	measure 'meas.end_of_prev_year_as_of' =
			
			var asof_prevyear = Year(MAX(ssr[_sys_as_of])) -1
			var res = date(asof_prevyear,12,31)
			return res
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: 438fecb4-807d-4ca3-9f8e-24197be82673

	measure 'meas.filter_string' = ```
			
			
			VAR _active_slicer_count = [meas.criteria_active_filters_count]
			//var filter_start_table = topn(1, filter(cal_end_dates,[Date])) // "01/01/2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[Date]) //  min(filter_start_table[Date])
			var max_filters =3
			var date_str =  "Date: " & Min(cal_end_dates[Date])  & " - " &  Max(cal_end_dates[Date])
			
			var user_role_str = IF ( 
			    ISFILTERED ( users[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users [trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role: All"
			)
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var res =  date_str & "  |  " & user_role_str & "  |  "  &  group_str
			RETURN
			IF(
			    _active_slicer_count >0,
			    res & "  |  "  & "Add’l filters applied:  " &  _active_slicer_count,
			    res
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 0e9f4d40-1128-4ca5-ada9-417fa063d10d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.relative_year' = ```
			
			var max_date = [meas.filter_date_max]
			var curr_context_date = [meas.context_date_max]
			var rel_period = DATEDIFF(  max_date, curr_context_date, YEAR)
			var res = rel_period
			return res 
			```
		formatString: 0
		displayFolder: _date_helpers
		lineageTag: f5ac0b22-bebb-4965-bcea-73be44b4e6c0

	measure 'meas.filter_date_max' = ```
			
			
			VAR res = MAXX (CALCULATETABLE(ALLSELECTED ( cal_end_dates )), cal_end_dates[Date]) 
			Return res
			
			
			```
		formatString: General Date
		displayFolder: _date_helpers
		lineageTag: ea526ed6-3776-4dcc-94a6-36856278b0bc

	measure 'meas.relative_month' = ```
			
			var max_date = [meas.filter_date_max]
			var curr_context_date = [meas.context_date_max]
			var rel_period = DATEDIFF(  max_date, curr_context_date, MONTH)
			var res = rel_period
			return res 
			```
		formatString: 0
		displayFolder: _date_helpers
		lineageTag: 3ae7b508-2cd4-4af3-bc5c-5124b75128e2

	measure 'meas.relative_qtr' = ```
			
			var max_date = [meas.filter_date_max]
			var curr_context_date = [meas.context_date_max]
			var rel_period = DATEDIFF(  max_date, curr_context_date, QUARTER)
			var res = rel_period
			return res 
			```
		formatString: 0
		displayFolder: _date_helpers
		lineageTag: 0a42b663-9ce6-4528-8dea-88502a2358eb

	measure 'meas.relative_week' = ```
			
			var max_date = [meas.filter_date_max]
			var curr_context_date = [meas.context_date_max]
			var rel_period = DATEDIFF(  max_date, curr_context_date, WEEK)
			var res = rel_period
			return res 
			```
		formatString: 0
		displayFolder: _date_helpers
		lineageTag: 969c62b9-5485-4f67-b1ac-ea5590007180

	measure 'meas.relative_day' = ```
			
			var max_date = [meas.filter_date_max]
			var curr_context_date = [meas.context_date_max]
			var rel_period = DATEDIFF(  max_date, curr_context_date, DAY)
			var res = rel_period
			return res 
			```
		formatString: 0
		displayFolder: _date_helpers
		lineageTag: 1bb41c93-8141-4c96-a44b-dcd1b7f8518f

	measure 'meas.filter_first_of_year_date_string' =
			
			
			//var filter_start_table = topn(1, filter(cal_end_dates,[first_of_year_date]])) // "2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[first_of_year_date]) // (cal_end_dates[first_of_year_date])
			var max_filters =1
			var date_str =  Year([meas.filter_date_min]) &  " - " &  Year([meas.filter_date_max]) & ""
			var res =  date_str
			return res
		displayFolder: _filter_helpers
		lineageTag: 0a8552ea-34ce-4249-b450-939e6c3e0b1c

	measure 'meas.filter_year' = Year([meas.filter_date_max]) & ""
		displayFolder: _filter_helpers
		lineageTag: 9e1f9e43-9e18-4e3d-8f09-6599b4e97631

	measure 'meas.filter_date_min' = ```
			
			
			VAR res = MINX (CALCULATETABLE(ALLSELECTED ( cal_end_dates )), cal_end_dates[Date]) 
			Return res
			
			
			```
		formatString: General Date
		displayFolder: _date_helpers
		lineageTag: 33a44e1e-5dd2-4860-8ca3-ff716c6b2544

	measure 'meas.data_logs_user_new_terminations_pos' = ```
			
			
			
			var fromDate =[meas.context_date_min] 
			var toDate = [meas.context_date_max] 
			
			var res = CALCULATE(DISTINCTCOUNT(users_history[_sys_user_id]), 
			           users_history[trueai_termination_date] >= fromDate &&     users_history[trueai_termination_date]  <= toDate 
			)
			return res * 1
			```
		formatString: 0
		lineageTag: da3d37b7-d270-4d82-a183-7092ad11bb0b

	measure 'meas.prior_year' = YEAR(MAX(cal_end_dates[Date]))
		formatString: 0
		lineageTag: 11707a90-f9fe-4e34-8794-bf5aa4facfe6

	measure 'meas.active_user_filter_string' = ```
			
			VAR _active_slicer_count = [meas.criteria_active_filters_count]
			
			//var filter_start_table = topn(1, filter(cal_end_dates,[Date])) // "01/01/2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[Date]) //  min(filter_start_table[Date])
			var max_filters =3
			var date_str = "As of: " & Max(cal_end_dates[Date])  //"Date: "  &  Max(cal_start_dates[Date])
			
			var user_role_str = IF ( 
			    ISFILTERED ( users[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users [trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role: All"
			)
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var res =  date_str & "  |  " & user_role_str & "  |  "  &  group_str
			RETURN
			IF(
			    _active_slicer_count >0,
			    res & "  |  "  & "Add’l filters applied:  " &  _active_slicer_count,
			    res
			)
			```
		displayFolder: _filter_helpers
		lineageTag: e6db8f05-3598-4f7c-ae2c-360591df6c38

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.current_page_filter_string' = CALCULATE(Max(cal_end_dates[Date]))
		formatString: Short Date
		displayFolder: _filter_helpers
		lineageTag: 25384dcf-0901-4fb5-a134-31612f5d3f98

	measure 'meas.aliasing_labels_accounts_cust_field_1' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			 var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_1" && aliasing[model]="peek_inside_customer_accounts"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 1 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 84f61f78-e3dd-4d3d-bf74-190860b35b02

	measure 'meas.aliasing_labels_accounts_cust_field_2' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			 var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_2" && aliasing[model]="peek_inside_customer_accounts"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 2 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 6a326ead-c9bc-4c2e-901a-f832145e701e

	measure 'meas.aliasing_labels_accounts_cust_field_3' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			 var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_3" && aliasing[model]="peek_inside_customer_accounts"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 3 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: b700819b-a3c3-4a42-814a-febb88f0cfd8

	measure 'meas.aliasing_labels_opps_cust_field_1' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_1",
			    aliasing[model]="peek_inside_opps"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 1 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: a15ccfa1-33da-4632-a2fc-47b0cf2abd9f

	measure 'meas.aliasing_labels_opps_cust_field_2' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_2",
			    aliasing[model]="peek_inside_opps"
			)
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 2 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 8c4b5a7f-bed6-4bad-8f2e-2eac34b97e34

	measure 'meas.aliasing_labels_opps_cust_field_3' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_3",
			    aliasing[model]="peek_inside_opps"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 3 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 1e3014e6-c531-4de9-9ed8-179f46bfc30f

	measure 'meas.filter_string_full_updated' = ```
			
			
			var max_filters =15
			var date_str =  "Date: " & Min(cal_end_dates[Date])  & " - " &  Max(cal_end_dates[Date] )
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var user_role_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x, "User Role: All"
			)
			
			var userfunction_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_function]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_function] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_function] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_function], ", " )
			    VAR ___x = "User Role Function: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role Function: All"
			)
			
			var dept_str = IF ( 
			    ISFILTERED ( users_history[trueai_user_role_dept]), 
			    VAR ___f = FILTERS ( users_history[trueai_user_role_dept] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users_history[trueai_user_role_dept] )
			    VAR ___d = CONCATENATEX ( ___t, users_history[trueai_user_role_dept], ", " )
			    VAR ___x = "Department: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Department: All"
			)
			
			var mgrtotreports_str = IF ( 
			    ISFILTERED ( managers_total[trueai_full_name]), 
			    VAR ___f = FILTERS ( managers_total [trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, managers_total [trueai_full_name])
			    VAR ___d = CONCATENATEX ( ___t, managers_total [trueai_full_name], ", " )
			    VAR ___x = "Mgr. - All Reports: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Mgr. - All Reports: All"
			)
			
			var mgrdirreports_str = IF ( 
			    ISFILTERED ( managers_direct[trueai_full_name]), 
			    VAR ___f = FILTERS ( managers_direct [trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, managers_direct [trueai_full_name] )
			    VAR ___d = CONCATENATEX ( ___t, managers_direct [trueai_full_name], ", " )
			    VAR ___x = "Mgr. - Only Direct Reports: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Mgr. - Only Direct Reports: All"
			)
			
			var username_str = IF ( 
			    ISFILTERED ( users[trueai_full_name]), 
			    VAR ___f = FILTERS ( users[trueai_full_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_full_name] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_full_name], ", " )
			    VAR ___x = "User Name: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Name: All"
			)
			
			//var d =  ISFILTERED  (users[trueai_hire_date].[Year]) // CONCATENATEX(FILTERS ( users[trueai_hire_date]), users[trueai_hire_date], ", " )
			
			var rephireyear_str = IF ( 
			    ISFILTERED ( users[trueai_hire_date].[Year]), 
			    VAR ___f = FILTERS ( users[trueai_hire_date].[Year]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_hire_date].[Year] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_hire_date].[Year], ", " )
			    VAR ___x = "User Hire Year: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Hire Year: All"
			)
			
			var reptermyear_str = IF ( 
			    ISFILTERED ( users[trueai_termination_date].[Year]), 
			    VAR ___f = FILTERS ( users[trueai_termination_date].[Year]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_termination_date].[Year] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_termination_date].[Year], ", " )
			    VAR ___x = "User Termination Year: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Termination Year: All"
			)
			
			var reploccountry_str = IF ( 
			    ISFILTERED ( users[trueai_addr_country]), 
			    VAR ___f = FILTERS ( users[trueai_addr_country]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_country] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_country], ", " )
			    VAR ___x = "User Location Country: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location Country: All"
			)
			
			var replocstate_str = IF ( 
			    ISFILTERED ( users[trueai_addr_state]), 
			    VAR ___f = FILTERS ( users[trueai_addr_state]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_state] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_state], ", " )
			    VAR ___x = "User Location State: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location State: All"
			)
			
			var reploccity_str = IF ( 
			    ISFILTERED ( users[trueai_addr_city]), 
			    VAR ___f = FILTERS ( users[trueai_addr_city]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f,users[trueai_addr_city] )
			    VAR ___d = CONCATENATEX ( ___t,users[trueai_addr_city], ", " )
			    VAR ___x = "User Location City: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Location City: All"
			)
			
			var stepname_str = IF ( 
			    ISFILTERED ( ssr_history[step_name]), 
			    VAR ___f = FILTERS ( ssr_history[step_name]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[step_name] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[step_name], ", " )
			    VAR ___x = "Sales Process Steps: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Sales Process Steps: All"
			)
			
			var substeps_str = IF ( 
			    ISFILTERED ( ssr_history[step_sub_type]), 
			    VAR ___f = FILTERS ( ssr_history[step_sub_type]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[step_sub_type] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[step_sub_type], ", " )
			    VAR ___x = "Sales Process Sub-Steps: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Sales Process Sub-Steps: All"
			)
			
			var industry_str = IF ( 
			    ISFILTERED ( ssr[trueai_industry]), 
			    VAR ___f = FILTERS ( ssr[trueai_industry]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[trueai_industry] )
			    VAR ___d = CONCATENATEX ( ___t, ssr[trueai_industry], ", " )
			    VAR ___x = "Industry: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Industry: All"
			)
			
			var country_str = IF ( 
			    ISFILTERED ( ssr[trueai_addr_country]), 
			    VAR ___f = FILTERS ( ssr[trueai_addr_country]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[trueai_addr_country] )
			    VAR ___d = CONCATENATEX ( ___t, ssr[trueai_addr_country], ", " )
			    VAR ___x = "Country: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Country: All"
			)
			
			var companysize_str = IF ( 
			    ISFILTERED ( ssr_company_sizes[trueai_company_size]), 
			    VAR ___f = FILTERS ( ssr_company_sizes[trueai_company_size]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_company_sizes[trueai_company_size])
			    VAR ___d = CONCATENATEX ( ___t, ssr_company_sizes[trueai_company_size], ", " )
			    VAR ___x = "Company Size: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Company Size: All"
			)
			
			var productfamily_str = IF ( 
			    ISFILTERED (products[trueai_family]), 
			    VAR ___f = FILTERS ( products[trueai_family]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, products[trueai_family])
			    VAR ___d = CONCATENATEX ( ___t, products[trueai_family], ", " )
			    VAR ___x = "Product Family: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Product Family: All"
			)
			
			var crm_mtach_id_str = IF ( 
			    ISFILTERED (users[trueai_ext_match_id]), 
			    VAR ___f = FILTERS ( users[trueai_ext_match_id]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_ext_match_id])
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_ext_match_id], ", " )
			    VAR ___x = "HR Roster Matches Only: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "HR Roster Matches Only: All"
			)
			
			var _booking_amt_mode = IF ( 
			    ISFILTERED ( all_act_support[Booking Amount Display Mode]), 
			    VAR ___f = FILTERS ( all_act_support[Booking Amount Display Mode]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, all_act_support[Booking Amount Display Mode])
			    VAR ___d = CONCATENATEX ( ___t, all_act_support[Booking Amount Display Mode], ", " )
			    VAR ___x = "Booking Amount Display Mode: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Booking Amount Display Mode: All"
			)
			
			var _ssr_crm_leadsource = IF ( 
			    ISFILTERED ( ssr[crm_leadsource]), 
			    VAR ___f = FILTERS ( ssr[crm_leadsource]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[crm_leadsource])
			    VAR ___d = CONCATENATEX ( ___t, ssr[crm_leadsource], ", " )
			    VAR ___x = "Lead Source CRM Name: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x ," | "  &  "Lead Source CRM Name: All"
			)
			
			var _ssr_crm_leadsource_type = IF ( 
			    ISFILTERED ( ssr[col.trueai_leadsource_inbound_outbound]), 
			    VAR ___f = FILTERS ( ssr[col.trueai_leadsource_inbound_outbound]) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr[col.trueai_leadsource_inbound_outbound])
			    VAR ___d = CONCATENATEX ( ___t, ssr[col.trueai_leadsource_inbound_outbound], ", " )
			    VAR ___x = "Lead Source Type: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x ," | "  &  "Lead Source Type: All"
			)
			 
			var acc_custfield1_str = 
			IF(
			    [meas.aliasing_labels_accounts_cust_field_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_1]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f,  ssr[crm_account_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t,  ssr[crm_account_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_1] &" : All"
			    ),
			    "N/A"
			)
			
			var acc_custfield2_str =
			IF(
			    [meas.aliasing_labels_accounts_cust_field_2] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f,  ssr[crm_account_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t,  ssr[crm_account_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_2] & " : All"
			    ),
			    "N/A"
			)
			
			var acc_custfield3_str =IF(
			    [meas.aliasing_labels_accounts_cust_field_3] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr[crm_account_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr[crm_account_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr[crm_account_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr[crm_account_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_accounts_cust_field_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_accounts_cust_field_3] & " : All"
			    ),
			    "N/A"
			)
			
			
			var opp_custfield1_str = IF(
			    [meas.aliasing_labels_opps_cust_field_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_1]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_1] &" : All"
			    ),
			    "N/A"
			)
			
			var opp_custfield2_str = IF(
			    [meas.aliasing_labels_opps_cust_field_2] <>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_2] & " : All"
			    ),
			    "N/A"
			)
			
			var opp_custfield3_str = IF(
			    [meas.aliasing_labels_opps_cust_field_3]<>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_opps_cust_field_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_opps_cust_field_3] & " : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield1_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_1] <> "N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_1]), 
			        VAR ___f = FILTERS (ssr_history[entity_crm_custom_value_1]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_1] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_1], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_1] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_1] &" : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield2_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_2] <>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_2]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_2]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_2] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_2], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_2] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_2] & " : All"
			    ),
			    "N/A"
			)
			
			var leads_custfield3_str = IF(
			    [meas.aliasing_labels_leads_cust_fiel_3]<>"N/A",
			    IF ( 
			        ISFILTERED ( ssr_history[entity_crm_custom_value_3]), 
			        VAR ___f = FILTERS ( ssr_history[entity_crm_custom_value_3]) 
			        VAR ___r = COUNTROWS ( ___f ) 
			        VAR ___t = TOPN ( max_filters, ___f, ssr_history[entity_crm_custom_value_3] )
			        VAR ___d = CONCATENATEX ( ___t, ssr_history[entity_crm_custom_value_3], ", " )
			        VAR ___x = [meas.aliasing_labels_leads_cust_fiel_3] & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			        RETURN ___x ," | "  & [meas.aliasing_labels_leads_cust_fiel_3] & " : All"
			    ),
			    "N/A"
			)
			
			
			
			
			var res = "When" & UNICHAR(13) & UNICHAR(10) & "  |  " & date_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) & "Who" & UNICHAR(13) & UNICHAR(10)  & " | "  &  group_str & UNICHAR(13) & UNICHAR(10) & "  |  " & user_role_str & UNICHAR(13) & UNICHAR(10) & " | "  &  userfunction_str & UNICHAR(13) & UNICHAR(10) & " | "  &  dept_str & UNICHAR(13) & UNICHAR(10) & " | "  &  mgrtotreports_str & UNICHAR(13) & UNICHAR(10) & " | "  &  mgrdirreports_str & UNICHAR(13) & UNICHAR(10) & " | "  &  username_str & UNICHAR(13) & UNICHAR(10) & " | "  &  rephireyear_str & UNICHAR(13) & UNICHAR(10) & " | "  &  reptermyear_str & UNICHAR(13) & UNICHAR(10) &  " | "  &  reploccountry_str & UNICHAR(13) & UNICHAR(10)  &  " | "  &  replocstate_str & UNICHAR(13) & UNICHAR(10) &   " | "  &  reploccity_str & UNICHAR(13) & UNICHAR(10) &   " | "  &  crm_mtach_id_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) 
			
			& "What" & UNICHAR(13) & UNICHAR(10) & 
			UNICHAR(13) & UNICHAR(10) &
			
			"Booking Amount Display Mode" & UNICHAR(13) & UNICHAR(10) & 
			" | " & _booking_amt_mode & UNICHAR(13) & UNICHAR(10) &
			UNICHAR(13) & UNICHAR(10) &
			
			"Customer Segmentation" & UNICHAR(13) & UNICHAR(10) & 
			" | "  &  industry_str & UNICHAR(13) & UNICHAR(10) & 
			" | "  &  country_str & UNICHAR(13) & UNICHAR(10) & 
			" | "  &  companysize_str & UNICHAR(13) & UNICHAR(10) & 
			UNICHAR(13) & UNICHAR(10) & 
			
			"Custom Fields" & UNICHAR(13) & UNICHAR(10) & 
			"Leads & Accounts: " & 
			UNICHAR(13) & UNICHAR(10) & leads_custfield1_str & 
			UNICHAR(13) & UNICHAR(10) &  leads_custfield2_str & 
			UNICHAR(13) & UNICHAR(10) &  leads_custfield3_str & 
			UNICHAR(13) & UNICHAR(10) &  _ssr_crm_leadsource & 
			UNICHAR(13) & UNICHAR(10) &  _ssr_crm_leadsource_type & 
			UNICHAR(13) & UNICHAR(10) & acc_custfield1_str & 
			UNICHAR(13) & UNICHAR(10) &  acc_custfield2_str & 
			UNICHAR(13) & UNICHAR(10) &  acc_custfield3_str & 
			UNICHAR(13) & UNICHAR(10) & 
			UNICHAR(13) & UNICHAR(10) &
			"Opportunities:" & 
			UNICHAR(13) & UNICHAR(10) & opp_custfield1_str & 
			UNICHAR(13) & UNICHAR(10) &  opp_custfield2_str & 
			UNICHAR(13) & UNICHAR(10) &  opp_custfield3_str & 
			UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) &
			
			"Product " & UNICHAR(13) & UNICHAR(10) &
			" | "  &  productfamily_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10) & 
			
			"Standardized Sales Process Steps" & UNICHAR(13) & UNICHAR(10) & 
			" | " & stepname_str & UNICHAR(13) & UNICHAR(10) &
			" | " & substeps_str & UNICHAR(13) & UNICHAR(10) & UNICHAR(13) & UNICHAR(10)
			
			
			return 
			res
			```
		displayFolder: _filter_helpers
		lineageTag: a2bda876-e250-4cd4-9846-85a4c87a34c1

	measure 'meas.target_screen_filter_string' = ```
			
			
			VAR _active_slicer_count = [meas.criteria_active_filters_count]
			
			//var filter_start_table = topn(1, filter(cal_end_dates,[Date])) // "01/01/2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[Date]) //  min(filter_start_table[Date])
			var max_filters =3
			var date_str =  "Date: "  &  Max(cal_start_dates[Date])
			
			var user_role_str = IF ( 
			    ISFILTERED ( users[trueai_user_role_function]), 
			    VAR ___f = FILTERS ( users[trueai_user_role_function] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_user_role_function] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_user_role_function], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role: All"
			)
			
			var outcome_str = IF ( 
			    ISFILTERED ( ssr_history[col.step_outcome]), 
			    VAR ___f = FILTERS ( ssr_history[col.step_outcome] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, ssr_history[col.step_outcome] )
			    VAR ___d = CONCATENATEX ( ___t, ssr_history[col.step_outcome], ", " )
			    VAR ___x = "Step Outcome: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Step Outcome: All"
			)
			var res =  date_str & "  |  " & user_role_str & " | "  &  outcome_str
			
			RETURN
			IF(
			    _active_slicer_count >0,
			    res & " " & "Add’l filters applied: " & _active_slicer_count,
			    res
			)
			```
		displayFolder: _filter_helpers
		lineageTag: de33efac-38fd-4361-94e8-7fdc39fd008b

	measure 'meas.criteria_active_filters_count' = ```
			
			VAR _date = IF(ISFILTERED(cal_end_dates[Date]), 1, 0)
			VAR _group = IF(ISFILTERED(users[trueai_group]),1,0)
			VAR _user_role = IF(ISFILTERED(users[trueai_user_role_alias]), 1, 0)
			VAR _role_function = IF(ISFILTERED(users[trueai_user_role_function]),1,0)
			VAR _role_dept = IF(ISFILTERED(users[trueai_user_role_dept]), 1, 0)
			VAR _all_report = IF(ISFILTERED(managers_total[trueai_full_name]), 1, 0)
			VAR _direct_report  = IF(ISFILTERED(managers_direct[trueai_full_name]),1,0)
			VAR _username  = IF(ISFILTERED(users[trueai_full_name]),1,0)
			VAR _new_hires = IF(ISFILTERED(users[trueai_hire_date].[Year]),1,0)
			VAR _termination = IF(ISFILTERED(users[trueai_termination_date].[Year]),1,0)
			VAR _rep_country = IF(ISFILTERED(users[trueai_addr_country]),1,0)
			VAR _rep_state = IF(ISFILTERED(users[trueai_addr_state]),1,0)
			VAR _rep_city = IF(ISFILTERED(users[trueai_addr_city]),1,0)
			VAR _opp_step = IF(ISFILTERED(ssr_history[step_name]), 1, 0)
			VAR _segment_industry = IF(ISFILTERED(ssr[trueai_industry]),1,0)
			VAR _segment_country = IF(ISFILTERED(ssr[trueai_addr_country]), 1, 0)
			VAR _segment_company_size = IF(ISFILTERED(ssr_company_sizes[trueai_company_size]),1,0)
			VAR _product_family = IF(ISFILTERED(products[trueai_family]),1,0)
			VAR acc_custom_1 = IF(ISFILTERED(ssr_history[account_crm_custom_value_1]),1,0)
			VAR acc_custom_2 = IF(ISFILTERED(ssr_history[account_crm_custom_value_2]),1,0)
			VAR acc_custom_3 = IF(ISFILTERED(ssr_history[account_crm_custom_value_3]),1,0)
			VAR opp_custom_1 = IF(ISFILTERED(ssr_history[entity_crm_custom_value_1]),1,0)
			VAR opp_custom_2 = IF(ISFILTERED(ssr_history[entity_crm_custom_value_2]),1,0)
			VAR opp_custom_3 = IF(ISFILTERED(ssr_history[entity_crm_custom_value_3]),1,0)
			VAR exact_id = IF(ISFILTERED(users[trueai_ext_match_id]),1,0)
			VAR _display_mode =
			    IF(
			        HASONEVALUE(booking_amount_display_mode[amount_display_mode]) &&
			        TRIM(SELECTEDVALUE(booking_amount_display_mode[amount_display_mode])) = "MRR Bookings",
			        1, 0
			    )
			    
			var total_active_slicer = _role_function + _role_dept+_all_report+_direct_report+_username+_new_hires+_termination+_rep_country+_rep_state+_rep_city+_opp_step+_segment_industry+
			    _segment_country+_segment_company_size+_product_family+acc_custom_1+acc_custom_2+acc_custom_3+opp_custom_1+opp_custom_2+opp_custom_3+exact_id +_display_mode 
			
			RETURN
			total_active_slicer
			```
		displayFolder: _filter_helpers
		lineageTag: dcc5f402-4104-4713-ac64-5c4dcc6f7d69

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.ssr_history_success_count_lead_gen_w_thresh' = ```
			
			//this measure helps you filter out small segments of a result so they don't "pollute" the result. Use this is a filter measure and make the condition "greater than 0"
			// first get the current count but remove the groupiing filter context 
			var all_current_val =  CALCULATE(count(ssr_history[_sys_doc_id]), ssr_history[_sys_doc_id] <> "abc") // abc is a value that will never exist in the db
			// get the regular count in the current filter context
			var count_current_val = CALCULATE(count(ssr_history[_sys_doc_id]),ssr_history[step_name]= "Lead Gen" && ssr_history[step_success] = true && isBlank(ssr_history[entity_qual_bucket]) = false ) 
			// see the ration of this value
			var ratio = DIVIDE(count_current_val, all_current_val)
			// set the threshold - in this case 3%
			var thresh = 0.03
			// determine if the ratio is over the threshhold and resturn o
			var res  = IF(ratio >= thresh, 1, 0)
			RETURN
			res
			```
		formatString: 0
		displayFolder: spec_filter_helper
		lineageTag: 8799b9a6-ea2a-46c0-a672-0fa61c9c8751

	measure 'meas.ssr_history_threshold_filter_less_than_3%' = ```
			
			//this measure helps you filter out small segments of a result so they don't "pollute" the result. Use this is a filter measure and make the condition "greater than 0"
			// first get the current count but remove the groupiing filter context 
			var all_current_val =  CALCULATE(count(ssr_history[_sys_ssr_id]),users[trueai_group] <> "abc" && users[trueai_user_role_function] <> "abc" ) // abc is a value that will never exist in the db
			// get the regular count in the current filter context
			var count_current_val = CALCULATE(count(ssr_history[_sys_ssr_id])) 
			// see the ration of this value
			var ratio = DIVIDE(count_current_val, all_current_val)
			// set the threshold - in this case 3%
			var thresh = 0.03
			// determine if the ratio is over the threshhold and resturn o
			var res  = IF(ratio >= thresh, 1, 0)
			return res
			```
		formatString: 0
		displayFolder: spec_filter_helper
		lineageTag: 61f7cfca-1076-41cc-bfd0-cd87890decb7

	measure 'meas.ssr_history_threshold_filter_lead_less_than_3%' = ```
			
			//this measure helps you filter out small segments of a result so they don't "pollute" the result. Use this is a filter measure and make the condition "greater than 0"
			// first get the current count but remove the groupiing filter context 
			// var all_current_val =  CALCULATE(count(ssr_history[_sys_doc_id]),ssr_history[step_name] <> "abc") // abc is a value that will never exist in the db
			var all_current_val = CALCULATE(
			    COUNT(
			        ssr_history[_sys_ssr_id]
			    ),
			    ALLSELECTED()
			)
			// get the regular count in the current filter context
			var count_current_val = CALCULATE(count(ssr_history[_sys_ssr_id])) 
			// see the ration of this value
			var ratio = DIVIDE(count_current_val, all_current_val)
			// set the threshold - in this case 2%
			var thresh = 0.03
			// determine if the ratio is over the threshhold and resturn o
			var res  = IF(ratio >= thresh, 1, 0)
			RETURN
			res
			```
		formatString: 0
		displayFolder: spec_filter_helper
		lineageTag: 0bdda3b4-1e58-4e90-bb18-0f9f31c289a0

	measure 'meas.ssr_history_threshold_filter_less_than_3%_updated' = ```
			
			//this measure helps you filter out small segments of a result so they don't "pollute" the result. Use this is a filter measure and make the condition "greater than 0"
			// first get the current count but remove the groupiing filter context 
			var all_current_val =  CALCULATE(count(ssr_history[_sys_ssr_id]), ssr_history[step_name] <> "abc") // abc is a value that will never exist in the db
			// get the regular count in the current filter context
			var count_current_val = CALCULATE(count(ssr_history[_sys_ssr_id])) 
			// see the ration of this value
			var ratio = DIVIDE(count_current_val, all_current_val)
			// set the threshold - in this case 3%
			var thresh = 0.03
			// determine if the ratio is over the threshhold and resturn o
			var res  = IF(ratio >= thresh, 1, 0)
			return res
			```
		formatString: 0
		displayFolder: spec_filter_helper
		lineageTag: d1b55725-3709-43a0-9d85-d40ee4c96aea

	measure 'meas.last_date_of_previous_quarter' = ```
			
			// -- Measure to get the end date of the current quarter
			
			VAR SelectedDate = CALCULATE(MAX(cal_end_dates[Date]))
			VAR QuarterEndDate = 
			    SWITCH(
			        TRUE(),
			        MONTH(SelectedDate) IN {1, 2, 3}, DATE(YEAR(SelectedDate), 3, 31),
			        MONTH(SelectedDate) IN {4, 5, 6}, DATE(YEAR(SelectedDate), 6, 30),
			        MONTH(SelectedDate) IN {7, 8, 9}, DATE(YEAR(SelectedDate), 9, 30),
			        MONTH(SelectedDate) IN {10, 11, 12}, DATE(YEAR(SelectedDate), 12, 31)
			    )
			
			
			
			VAR CurrentQuarterEnd = QuarterEndDate
			VAR PreviousQuarterEnd = 
			    SWITCH(
			        TRUE(),
			        MONTH(CurrentQuarterEnd) = 3, DATE(YEAR(CurrentQuarterEnd) - 1, 12, 31),
			        MONTH(CurrentQuarterEnd) = 6, DATE(YEAR(CurrentQuarterEnd), 3, 31),
			        MONTH(CurrentQuarterEnd) = 9, DATE(YEAR(CurrentQuarterEnd), 6, 30),
			        MONTH(CurrentQuarterEnd) = 12, DATE(YEAR(CurrentQuarterEnd), 9, 30)
			    )
			RETURN
			    PreviousQuarterEnd
			```
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: b62ca725-ab2e-40a1-a299-249d22d5960b

	measure 'meas.last_date_previous_quarter' = ```
			
			// -- Measure to get the end date of the current quarter
			
			CALCULATE(
			    MAX(cal_end_dates[Date]),
			    PREVIOUSQUARTER(cal_end_dates[Date])
			)
			
			```
		formatString: Short Date
		displayFolder: _date_helpers
		lineageTag: 01ca9ba2-a222-4b43-9752-c5b262cb7f73

	measure 'meas.check_dates' =
			
			var end_date = [meas.last_date_of_previous_quarter]
			var start_date = EDATE(end_date, -12) // get the start date from end_date
			
			
			RETURN
			end_date & "---" &  start_date
		displayFolder: _date_helpers
		lineageTag: f37aa444-9c80-4b2a-9b7a-dae543b49450

	measure 'meas.aliasing_labels_leads_cust_fiel_1' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_1" && aliasing[model]="peek_inside_leads"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 1 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 4e68e0b4-0812-48b1-a5af-89c61c138593

	measure 'meas.aliasing_labels_leads_cust_fiel_2' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_2" && aliasing[model]="peek_inside_leads"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 2 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: b76717ef-b77d-4c6f-bd9e-445ba7e18770

	measure 'meas.aliasing_labels_leads_cust_fiel_3' = ```
			
			 // needs to be filterd by correct model/field to show the right data
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="crm_cat_var_3" && aliasing[model]="peek_inside_leads"
			)
			
			RETURN
			IF(
			    alias_str = BLANK(),
			    "Custom Field 3 (Not Used)",
			    alias_str
			)
			```
		displayFolder: _filter_helpers
		lineageTag: bb86cea1-8ab0-4556-837d-c74c2e7eb9e8

	measure 'meas.user_role_aliased_effectiveness_title' =
			
			var alias_str = CALCULATE(
			    MAX(users[trueai_user_role])
			
			)
			var txt = "Effectiveness"
			
			var res  = alias_str & " " & txt
			RETURN
			res
		displayFolder: _filter_helpers
		lineageTag: 775e95ef-42eb-4a1a-835f-7ed41d0ed499

	measure 'meas.user_role_aliased_performance_title' =
			
			var _aliased_role = CALCULATE(MAX(users[trueai_user_role_alias]))        // get the user role aliased
			var txt = "Performance"
			
			var res  = _aliased_role & " " & txt
			RETURN
			res
		displayFolder: _filter_helpers
		lineageTag: f0c111df-549d-48ea-838d-d165d677a3c7

	measure 'meas.aliasing_user_role' =
			
			var alias_str = CALCULATE(
			    FIRSTNONBLANK(aliasing[alias] , "No Such Field"),
			    aliasing[label]="Sales Engineer"
			)
			
			RETURN
			alias_str
		displayFolder: _filter_helpers
		lineageTag: c9ab31eb-f0be-4b70-8ded-1329bb876fd2

	measure 'meas.cal_end_sel_date' =
			
			
			VAR res = MAXX (CALCULATETABLE(ALLSELECTED ( cal_end_dates )), cal_end_dates[Date]) // get the selected start dagte
			RETURN
			res
		formatString: General Date
		lineageTag: 1b45670c-d196-4083-8c1e-1bf35c9400a8

	measure 'meas.open_pipeline_filter_string' = ```
			
			VAR _active_slicer_count = [meas.criteria_active_filters_count]
			
			//var filter_start_table = topn(1, filter(cal_end_dates,[Date])) // "01/01/2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[Date]) //  min(filter_start_table[Date])
			var max_filters =3
			var date_str = "As of: " & Max(cal_start_dates[Date])  //"Date: "  &  Max(cal_start_dates[Date])
			
			var user_role_str = IF ( 
			    ISFILTERED ( users[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users [trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role: All"
			)
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var res =  date_str & "  |  " & user_role_str & "  |  "  &  group_str
			
			RETURN
			IF(
			    _active_slicer_count > 0,
			    res & "  |  "  & "Add’l filters applied:  " &  _active_slicer_count,
			    res
			)
			```
		displayFolder: _filter_helpers
		lineageTag: 0d62af9a-ef4b-4249-902b-5fe229d4796d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.current_context_min_date' = ```
			
			CALCULATE (
			    MAX('cal_end_dates'[Date]),
			    TOPN(1, 'cal_end_dates', 'cal_end_dates'[Date], ASC)
			)
			
			```
		formatString: General Date
		displayFolder: _filter_helpers
		lineageTag: c5a39642-9bc6-4868-adfe-0b6fa1c15ed9

	measure 'meas.current_context_max_date' =
			
			LASTDATE(cal_end_dates[Date])
		formatString: General Date
		displayFolder: _filter_helpers
		lineageTag: fe3da003-12d9-4c41-a4eb-4e09c8084cf5

	measure 'meas.filter_string_as_of' = ```
			
			
			var date_str =  "As of: " & Max(cal_end_dates[Date])
			
			var res =  date_str 
			RETURN
			res
			```
		displayFolder: _filter_helpers
		lineageTag: 4aaf52ad-1ce1-4a47-9fc1-fe03ea71b7fb

	measure 'meas.date_filter_string' =
			
			
			var date_str =  "Date: " & Min(cal_end_dates[Date])  & " - " &  Max(cal_end_dates[Date])
			
			
			RETURN
			date_str
		displayFolder: _filter_helpers
		lineageTag: 6610e67f-0a8d-4a64-bf04-34e8c044cab5

	measure 'meas.filter_string_as_of_full' = ```
			
			VAR _active_slicer_count = [meas.criteria_active_filters_count]
			
			//var filter_start_table = topn(1, filter(cal_end_dates,[Date])) // "01/01/2010"
			//var filter_start_val = ISFILTERED(cal_end_dates[Date]) //  min(filter_start_table[Date])
			var max_filters =3
			var date_str = "As of: " & Max(cal_start_dates[Date])  //"Date: "  &  Max(cal_start_dates[Date])
			
			var user_role_str = IF ( 
			    ISFILTERED ( users[trueai_user_role_alias]), 
			    VAR ___f = FILTERS ( users[trueai_user_role_alias] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_user_role_alias] )
			    VAR ___d = CONCATENATEX ( ___t, users [trueai_user_role_alias], ", " )
			    VAR ___x = "User Role: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "User Role: All"
			)
			
			var group_str = IF ( 
			    ISFILTERED ( users[trueai_group]), 
			    VAR ___f = FILTERS ( users[trueai_group] ) 
			    VAR ___r = COUNTROWS ( ___f ) 
			    VAR ___t = TOPN ( max_filters, ___f, users[trueai_group] )
			    VAR ___d = CONCATENATEX ( ___t, users[trueai_group], ", " )
			    VAR ___x = "Group: " & ___d & IF(___r > max_filters, ", ... [" & ___r & " items selected]") & " " 
			    RETURN ___x , "Group: All"
			)
			
			var res =  date_str & "  |  " & user_role_str & "  |  "  &  group_str
			
			RETURN
			IF(
			    _active_slicer_count > 0,
			    res & "  |  "  & "Add’l filters applied:  " &  _active_slicer_count,
			    res
			)
			```
		displayFolder: _filter_helpers
		lineageTag: eef60dbc-6ba5-4dd9-ad28-601b2abb6533

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Date
		formatString: Short Date
		lineageTag: 86095ff3-619d-4c1f-ab71-5e768c8b7a14
		summarizeBy: none
		isNameInferred
		sourceColumn: [Date]

		variation Variación
			isDefault
			relationship: e752b850-590a-4488-8bdb-e23d447e0cca
			defaultHierarchy: LocalDateTable_d9cd643e-7eb2-4078-b7d4-6261fea9cd66.'Date Hierarchy'

		changedProperty = DataType

		changedProperty = FormatString

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column date_as_integer
		lineageTag: dc31e7db-2c2a-4c88-8eaf-3f9f25989f77
		summarizeBy: none
		isNameInferred
		sourceColumn: [date_as_integer]

		annotation SummarizationSetBy = Automatic

	column year
		formatString: 0
		lineageTag: e4f6ada4-90ae-4609-b42c-d5f4ff0660ee
		summarizeBy: sum
		isNameInferred
		sourceColumn: [year]

		annotation SummarizationSetBy = Automatic

	column month_number
		lineageTag: 973279c9-f2cb-47e3-b904-eb2c55e05a94
		summarizeBy: none
		isNameInferred
		sourceColumn: [month_number]

		annotation SummarizationSetBy = Automatic

	column year_month_number
		lineageTag: 36158ebe-806d-4b59-adf7-70acc7db9a47
		summarizeBy: none
		isNameInferred
		sourceColumn: [year_month_number]

		annotation SummarizationSetBy = Automatic

	column year_month_short
		lineageTag: d564f460-3385-4216-a2e1-c9bb73347be9
		summarizeBy: none
		isNameInferred
		sourceColumn: [year_month_short]
		sortByColumn: year_month_number

		annotation SummarizationSetBy = Automatic

	column month_name_short
		lineageTag: 026af4ac-4da3-4995-b9f5-fae59f8ec971
		summarizeBy: none
		isNameInferred
		sourceColumn: [month_name_short]
		sortByColumn: month_number

		annotation SummarizationSetBy = Automatic

	column month_name_long
		lineageTag: f22c6569-cb80-4917-b2de-e2aab35879c8
		summarizeBy: none
		isNameInferred
		sourceColumn: [month_name_long]
		sortByColumn: month_number

		annotation SummarizationSetBy = Automatic

	column day_of_week_number
		formatString: 0
		lineageTag: 86142ac0-d7ba-433d-a4c0-4b3ea11830ae
		summarizeBy: sum
		isNameInferred
		sourceColumn: [day_of_week_number]

		annotation SummarizationSetBy = Automatic

	column day_of_week
		lineageTag: 687c0d7c-30a6-49fe-9057-642d2d0ba7bf
		summarizeBy: none
		isNameInferred
		sourceColumn: [day_of_week]

		annotation SummarizationSetBy = Automatic

	column day_of_week_short
		lineageTag: 83ef68a1-52ef-4b07-812b-b7efdc56c457
		summarizeBy: none
		isNameInferred
		sourceColumn: [day_of_week_short]

		annotation SummarizationSetBy = Automatic

	column quarter
		lineageTag: 6cb1305b-2d31-404c-87ed-5795b4692299
		summarizeBy: none
		isNameInferred
		sourceColumn: [quarter]

		annotation SummarizationSetBy = Automatic

	column year_quarter
		lineageTag: 0a907e53-7d54-4cd2-99a0-25cb602e0f15
		summarizeBy: none
		isNameInferred
		sourceColumn: [year_quarter]

		annotation SummarizationSetBy = Automatic

	column year_week_number
		lineageTag: faf180e6-804a-4525-b401-37fe3e1e6577
		summarizeBy: none
		isNameInferred
		sourceColumn: [year_week_number]

		annotation SummarizationSetBy = Automatic

	column year_day_number
		lineageTag: 15d54118-9d10-4199-9d57-c5c997f25c8d
		summarizeBy: none
		isNameInferred
		sourceColumn: [year_day_number]

		annotation SummarizationSetBy = Automatic

	column first_of_week_date
		formatString: Short Date
		lineageTag: 5ac99d14-7cab-4734-ab71-3aa957c28f15
		summarizeBy: none
		isNameInferred
		sourceColumn: [first_of_week_date]

		variation Variación
			isDefault
			relationship: 1bae7fc1-f8c3-434d-9927-3d3e3b694548
			defaultHierarchy: LocalDateTable_5602f5c2-3e02-4d06-8b8b-58f8b352f1c9.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column first_of_month_date
		formatString: Short Date
		lineageTag: 1c381cc3-533b-4365-b2db-bac8cd0d8780
		summarizeBy: none
		isNameInferred
		sourceColumn: [first_of_month_date]

		variation Variación
			isDefault
			relationship: 7cb27259-1044-44be-8899-f265e64489dc
			defaultHierarchy: LocalDateTable_e8f034e6-8eb8-4577-ba96-6a97bb81c8f5.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column first_of_qtr_date
		formatString: Short Date
		lineageTag: f054963b-c1c7-45fd-aef4-7df58ed09738
		summarizeBy: none
		isNameInferred
		sourceColumn: [first_of_qtr_date]

		variation Variación
			isDefault
			relationship: 322343af-047a-4114-9512-6024b6895776
			defaultHierarchy: LocalDateTable_354bc529-3d95-400f-9634-c66c58876dd4.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column first_of_year_date
		formatString: Short Date
		lineageTag: e3549c67-4071-4ee8-b0d2-597cbd2312e3
		summarizeBy: none
		isNameInferred
		sourceColumn: [first_of_year_date]

		variation Variación
			isDefault
			relationship: 000de867-89cc-43ec-819c-e41d69441b2e
			defaultHierarchy: LocalDateTable_f142aaad-c029-4445-8110-9fdfbb1cd5b6.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column 'Fiscal Date'
		formatString: Short Date
		lineageTag: 1138c9ad-8b00-4b7c-af5b-8cdc48bde415
		summarizeBy: none
		isNameInferred
		sourceColumn: [Fiscal Date]

		variation Variación
			isDefault
			relationship: 29537d34-1e05-43ad-a590-f45a3138ba14
			defaultHierarchy: LocalDateTable_557797f7-17d9-4f5d-bc08-ab429d81d284.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column year_quarter_num
		formatString: 0
		lineageTag: 53cb2598-70ff-4cf4-9589-578e18f9a2fe
		summarizeBy: sum
		isNameInferred
		sourceColumn: [year_quarter_num]

		annotation SummarizationSetBy = Automatic

	column is_last_4q
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 808700fb-7973-4d9f-a0db-9e0dadf3755a
		summarizeBy: none
		isNameInferred
		sourceColumn: [Is_Last_4Q]

		annotation SummarizationSetBy = Automatic

	partition cal_end_dates-c3d83cde-1612-440f-b017-358fa64b862d = calculated
		mode: import
		source = ```
				
				var min_date =  MAX(date(2000,01,01) ,  min(ssr[_sys_filt_start_date])) // get the first date that we have data for but never before 2000
				var max_date = max(ssr[_sys_as_of]) // get the last date (as _of) that we have data for
				var f_month = [meas.getFiscalYearOffset]
				var CurrentQuarterStart =
				    DATE(YEAR(max_date), MONTH(max_date) - MOD(MONTH(max_date)-1, 3), 1)
				
				var FourQuartersAgo =
				    EDATE(CurrentQuarterStart, -9)
				
				var FourQuartersAgoInclusive = EDATE(CurrentQuarterStart, -12)
				var CurrentQuarterEnd = EDATE(CurrentQuarterStart, 3) - 1
				
				var cal_tbl  =ADDCOLUMNS (
				CALENDAR (min_date, max_date),
				"date_as_integer", FORMAT ( [Date], "YYYYMMDD" ),
				"year", YEAR ( [Date] ),
				"month_number", FORMAT ( [Date], "MM" ),
				"year_month_number", FORMAT ( [Date], "YYYY/MM" ),
				"year_week_number", FORMAT ( [Date], "YYYY/0w" ),
				"year_day_number", FORMAT ( [Date], "YYYY/ddd" ),
				"year_month_short", FORMAT ( [Date], "YYYY/mmm" ),
				"month_name_short", FORMAT ( [Date], "mmm" ),
				"month_name_long", FORMAT ( [Date], "mmmm" ),
				"day_of_week_number", WEEKDAY ( [Date] ),
				"day_of_week", FORMAT ( [Date], "dddd" ),
				"day_of_week_short", FORMAT ( [Date], "ddd" ),
				"quarter", "Q" & FORMAT ( [Date], "Q" ),
				"year_quarter", FORMAT ( [Date], "YYYY" ) & "/Q" & FORMAT ( [Date], "Q" ),
				"year_quarter_num", YEAR ( [Date] ) * 4 + QUARTER ( [Date] ),
				"first_of_week_date",    [DATE] -WEEKDAY([DATE])+1,
				"first_of_month_date",  Date(year([Date]),Month([date]), 1),
				"first_of_qtr_date",  Date(year([Date]), 
				    SWITCH( Month([date]) , 1, 1, 2,1,3,1,4,4,5,4,6,4,7,7,8,7,9,7,10,10,11,10,12,10)
				,1),
				"is_last_4q",
				IF(
				    [Date] >= FourQuartersAgo && [Date] < EDATE(CurrentQuarterStart, 3),
				    TRUE(),
				    FALSE()
				),
				"first_of_year_date",  Date(year([Date]),1, 1),
				"Fiscal Date",
				DATE(
				    IF(
				        f_month = 0, 
				        YEAR([Date]), 
				        IF(
				            MONTH([Date]) >= f_month, 
				            YEAR([Date]), 
				            YEAR([Date]) - 1
				        )
				    ),
				    IF(
				        f_month = 0, 
				        MONTH([Date]), 
				        IF(
				            MONTH([Date]) >= f_month, 
				            MONTH([Date]) - f_month + 1, 
				            MONTH([Date]) + 12 - f_month + 1
				        )
				    ),
				    DAY([Date])
				)
				)
				
				// add the end date 
				var cal_tbl2  =ADDCOLUMNS (
				CALENDAR (DATE(2100,1,1),DATE(2100,1,1)),
				"date_as_integer", FORMAT ( [Date], "YYYYMMDD" ),
				"year", YEAR ( [Date] ),
				"month_number", FORMAT ( [Date], "MM" ),
				"year_month_number", FORMAT ( [Date], "YYYY/MM" ),
				"year_day_number", FORMAT ( [Date], "YYYY/00d" ),
				"year_week_number", FORMAT ( [Date], "YYYY/ww" ),
				"year_month_short", FORMAT ( [Date], "YYYY/mmm" ),
				"month_name_short", FORMAT ( [Date], "mmm" ),
				"month_name_long", FORMAT ( [Date], "mmmm" ),
				"day_of_week_number", WEEKDAY ( [Date] ),
				"day_of_week", FORMAT ( [Date], "dddd" ),
				"day_of_week_short", FORMAT ( [Date], "ddd" ),
				"quarter", "Q" & FORMAT ( [Date], "Q" ),
				"year_quarter", FORMAT ( [Date], "YYYY" ) & "/Q" & FORMAT ( [Date], "Q" ),
				"year_quarter_num", YEAR ( [Date] ) * 4 + QUARTER ( [Date] ),
				"first_of_week_date",    [DATE] -WEEKDAY([DATE])+1,
				"first_of_month_date",  Date(year([Date]),Month([date]), 1),
				"first_of_qtr_date",  Date(year([Date]), 
				    SWITCH( Month([date]) , 1, 1, 2,1,3,1,4,4,5,4,6,4,7,7,8,7,9,7,10,10,11,10,12,10)
				,1),
				"is_last_4q",
				IF(
				    [Date] >= FourQuartersAgo && [Date] < EDATE(CurrentQuarterStart, 3),
				    TRUE(),
				    FALSE()
				),
				"first_of_year_date",  Date(year([Date]),1, 1),
				"Fiscal Date",
				DATE(
				    IF(
				        f_month = 0, 
				        YEAR([Date]), 
				        IF(
				            MONTH([Date]) >= f_month, 
				            YEAR([Date]), 
				            YEAR([Date]) - 1
				        )
				    ),
				    IF(
				        f_month = 0, 
				        MONTH([Date]), 
				        IF(
				            MONTH([Date]) >= f_month, 
				            MONTH([Date]) - f_month + 1, 
				            MONTH([Date]) + 12 - f_month + 1
				        )
				    ),
				    DAY([Date])
				)
				
				)
				
				
				return union(cal_tbl, cal_tbl2)
				// return cal_tbl
				```

	annotation PBI_Id = 47fdd5fe548045698e2980cebacd82ae

