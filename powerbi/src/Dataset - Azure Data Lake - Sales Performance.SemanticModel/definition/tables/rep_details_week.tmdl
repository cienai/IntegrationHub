table rep_details_week
	lineageTag: 96b232d3-b57b-4370-8f79-3232804c0702

	measure 'meas.rep_details_week_of' =
			
			var _week_name = MAX(rep_details_week[week_start])
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_start],
			    "current", [meas.current_week_start],
			    "last", [meas.last_week_start]
			)
			
			RETURN
			res
		formatString: Short Date
		displayFolder: _rep_details
		lineageTag: 83c86fc7-8a0e-4f90-9444-c76231a943cd

	measure 'meas.current_week_phone_call_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,              // filter the table to get the current week call count
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_call_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: c90be761-2895-4f2d-9198-4b66d4a9985b

	measure 'meas.next_week_start' =
			
			VAR CurrentWeekStart = [meas.current_week_start]
			var res  = CurrentWeekStart + 7
			RETURN
			res
		formatString: General Date
		displayFolder: _rep_details_activity
		lineageTag: 3dbaf9f1-e584-4dc6-9191-167b6b6691f7

	measure 'meas.next_week_phone_call_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week call count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_call_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 09c2796c-197a-4f10-a4c0-b6b498e5b674

	measure 'meas.last_week_start' =
			
			VAR CurrentWeekStart = [meas.current_week_start]
			
			var res = CurrentWeekStart - 7
			RETURN
			res
		formatString: Short Date
		displayFolder: _rep_details_activity
		lineageTag: 8ba6e70e-c820-4027-beee-049e25dc7928

	measure 'meas.last_week_phone_call_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,              // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_call_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 3c109161-d370-42e3-adb5-aa06dbd2cddb

	measure 'meas.current_week_start' =
			
			VAR MaxSlicerDate = [meas.context_date_max]
			RETURN
			MaxSlicerDate - WEEKDAY(MaxSlicerDate, 2) + 1
		formatString: Short Date
		displayFolder: _rep_details_activity
		lineageTag: 085b26b4-d53f-428b-9911-b9952dfd27ab

	measure 'meas.rep_details_call_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_phone_call_count],
			    "current", [meas.current_week_phone_call_count],            // put the calls count based on the tiers
			    "last", [meas.last_week_phone_call_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 22695a67-e4ca-4445-8a92-9a30606d017e

	measure 'meas.last_week_email_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_email_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 5726fde7-91e0-4616-a6b7-518328757e6b

	measure 'meas.current_week_email_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,          // filter the table to get the current week call count
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_email_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 3d232e50-1ab9-412a-a7b4-dbd455f03af8

	measure 'meas.next_week_email_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week email count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_email_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: bb87f94b-8f8b-425e-bcc3-57bf87d80eae

	measure 'meas.rep_details_email_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_email_count],
			    "current", [meas.current_week_email_count],            // put the email count based on the tiers
			    "last", [meas.last_week_email_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 71709d52-7934-468f-9c6c-ef82ce355383

	measure 'meas.next_week_social_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week social count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_social_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 700c4ded-82ec-495c-a4b2-d4c8cbaa835f

	measure 'meas.last_week_social_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_social_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 27705afd-1b5f-419a-857d-707c6570ec06

	measure 'meas.current_week_social_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,            // filter the table to get the current week social count
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_social_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 0501e2f6-99a3-4e62-afc9-a1ae9ed9e81c

	measure 'meas.rep_details_social_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_social_count],
			    "current", [meas.current_week_social_count],            // put the social count based on the tiers
			    "last", [meas.last_week_social_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 58eb56bd-8a41-4f16-8cc6-929be3a8041a

	measure 'meas.current_week_meeting_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week meeting  count
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_meeting_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: b65a59d4-044e-40a8-ade5-06492f7dc66e

	measure 'meas.next_week_meeting_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week meeting count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_meeting_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: f1a90bb6-1a5d-4a7c-a27f-e622defd232e

	measure 'meas.last_week_meeting_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_type_meeting_count])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 55f755bb-be23-44c8-93a0-f429c004e8ac

	measure 'meas.rep_details_meeting_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_meeting_count],
			    "current", [meas.current_week_meeting_count],            // put the meeting count based on the tiers
			    "last", [meas.last_week_meeting_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: b387a419-6cb5-4a79-88cd-fafba53ec15f

	measure 'meas.next_week_time_spent' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week social count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 12f25adc-fd94-4d50-8e00-8e54ff8c628a

	measure 'meas.last_week_time_spent' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 9906d197-d717-46db-ba6e-ced005104870

	measure 'meas.current_week_time_spent' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,             // filter the table to get the current week duration
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 61bf81fc-d65e-4299-b364-8f7bd316e331

	measure 'meas.next_week_eng_time_spent' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,            // filter the table to get the current week social count
			            users_activities[_sys_filt_end_date] >= _next_weekStart && users_activities[_sys_filt_end_date] <= _next_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_eng_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 62d0f187-402f-46f6-ac4a-943f7503f427

	measure 'meas.current_week_eng_time_spent' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,         // filter the table to get the current week eng duration
			            users_activities[_sys_filt_end_date] >= _current_weekStart && users_activities[_sys_filt_end_date] <= _current_weekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_eng_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 6c2ba62b-a71c-49c7-b7c3-5d6832faad89

	measure 'meas.last_week_eng_time_spent' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        users_activities,              // filter the table to get the last week data
			            users_activities[_sys_filt_end_date] >= _lastWeekStart && users_activities[_sys_filt_end_date] <= _lastWeekEnd
			
			    )
			
			var res = SUMX(temp_tbl, users_activities[trueai_eng_dur])/3600
			RETURN
			ROUND(res,0) & " hrs/week"
		displayFolder: _rep_details_activity
		lineageTag: 7b584aeb-0332-4901-ba8a-3edd85f403a3

	measure 'meas.rep_details_time_spent' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_time_spent],
			    "current", [meas.current_week_time_spent],            // put the  time spent based on the tiers
			    "last", [meas.last_week_time_spent]
			)
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: b3dd0611-79a9-45ac-afb4-65e3de28a439

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_eng_time_spent' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_eng_time_spent],
			    "current", [meas.current_week_eng_time_spent],            // put the  eng time spent based on the tiers
			    "last", [meas.last_week_eng_time_spent]
			)
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 860f162e-6aca-4e75-a432-27fe2dd6365c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.next_week_won_opps_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the next week  won _opps count
			        cal_end_dates[Date] >= _next_weekStart && cal_end_dates[Date] <= _next_weekEnd,
			        opps[trueai_is_won]=True
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 853f19c8-63cf-4c4b-8a19-957df4e65a5a

	measure 'meas.current_week_won_opps_count' = ```
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,          // filter the table to get the current week call count
			        cal_end_dates[Date] >= _current_weekStart && cal_end_dates[Date] <= _current_weekEnd, 
			        opps[trueai_is_won]=True
			
			    )
			
			var res = COUNTX(temp_tbl, [_sys_doc_id])
			RETURN
			res
			```
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: c7093ea9-f753-4242-8313-998e488beac7

	measure 'meas.last_week_won_opps_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the last week data
			        cal_end_dates[Date] >= _lastWeekStart && cal_end_dates[Date] <= _lastWeekEnd,
			        opps[trueai_is_won]=True
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: a8784f94-f109-4014-ba6e-e90358750158

	measure 'meas.next_week_lost_opps_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the next week  won _opps count
			        cal_end_dates[Date] >= _next_weekStart && cal_end_dates[Date] <= _next_weekEnd,
			        opps[trueai_is_won]=False
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 72f5618c-b905-4e86-ba5d-a0967ab7115b

	measure 'meas.current_week_lost_opps_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,          // filter the table to get the current week lost opps count
			        cal_end_dates[Date] >= _current_weekStart && cal_end_dates[Date] <= _current_weekEnd,
			        opps[trueai_is_won]=False
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 4b8ed18b-ed8a-4467-b0b5-8c1253db9a4f

	measure 'meas.last_week_lost_opps_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the last week data
			        cal_end_dates[Date] >= _lastWeekStart && cal_end_dates[Date] <= _lastWeekEnd,
			        opps[trueai_is_won]=False
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: a981dc9f-5bed-4861-b019-5b4874994c1f

	measure 'meas.rep_details_won_opps_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_won_opps_count],
			    "current", [meas.current_week_won_opps_count],            // put the calls count based on the tiers
			    "last", [meas.last_week_won_opps_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 1e87dffd-42b8-47e4-beb4-466d6f4ea4bf

	measure 'meas.rep_details_lost_opps_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_lost_opps_count],
			    "current", [meas.current_week_lost_opps_count],            // put the calls count based on the tiers
			    "last", [meas.last_week_lost_opps_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: a5f6d7e9-6353-45f4-8967-f002cd6b943d

	measure 'meas.next_week_won_opps_amt' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the next week  won _opps count
			        cal_end_dates[Date] >= _next_weekStart && cal_end_dates[Date] <= _next_weekEnd,
			        opps[trueai_is_won]=True
			
			    )
			
			var res =  SUMX(temp_tbl, [trueai_booking_amt])
			RETURN
			res
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: _rep_details_activity
		lineageTag: 467e435d-2f4c-4c30-b590-c633cdbfc6a1

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'meas.current_week_won_opps_amt' = ```
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,          // filter the table to get the current week call count
			        cal_end_dates[Date] >= _current_weekStart && cal_end_dates[Date] <= _current_weekEnd, 
			        opps[trueai_is_won]=True
			
			    )
			
			var res = SUMX(temp_tbl, [trueai_booking_amt])
			RETURN
			res
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: _rep_details_activity
		lineageTag: b25d8d64-38d7-49c2-aa0c-7d047271027b

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'meas.last_week_won_opps_amt' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the last week data
			        cal_end_dates[Date] >= _lastWeekStart && cal_end_dates[Date] <= _lastWeekEnd,
			        opps[trueai_is_won]=True
			
			    )
			
			var res =  SUMX(temp_tbl, [trueai_booking_amt])
			RETURN
			res
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: _rep_details_activity
		lineageTag: 72043496-4b08-460a-8f0d-0caea06b1e60

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'meas.rep_details_won_opps_amt' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_won_opps_amt],
			    "current", [meas.current_week_won_opps_amt],            // put the calls count based on the tiers
			    "last", [meas.last_week_won_opps_amt]
			)
			
			RETURN
			res
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: _rep_details
		lineageTag: 31219b35-3aae-4419-9de9-33f796b77b03

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'meas.next_week_touched_accts_count' = ```
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        ssr_history,             // filter the table to get the next week 
			        cal_end_dates[Date] >= _next_weekStart && cal_end_dates[Date] <= _next_weekEnd
			    )
			var rep_tbl = FILTER(
			    temp_tbl,
			    ssr_history[step_name]="Untouched" && ssr_history[step_success]=True
			)
			
			var res =  COUNTX(rep_tbl, [_sys_ssr_id])
			RETURN
			res
			```
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: f709d5a9-231f-4493-8e43-f83e99e52f86

	measure 'meas.current_week_touched_accts_count' = ```
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        ssr_history,          // filter the table to get the current week 
			        cal_end_dates[Date] >= _current_weekStart && cal_end_dates[Date] <= _current_weekEnd
			    )
			var rep_tbl = FILTER(
			    temp_tbl,
			    ssr_history[step_name]="Untouched" && ssr_history[step_success]=True
			)
			
			var res = COUNTX(temp_tbl, [_sys_ssr_id])
			RETURN
			res
			```
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 716b61a5-6345-4bf8-b3d8-11a9efb6d10b

	measure 'meas.last_week_touched_accts_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        ssr_history,             // filter the table to get the last week data
			        cal_end_dates[Date] >= _lastWeekStart && cal_end_dates[Date] <= _lastWeekEnd
			
			    )
			var rep_tbl = FILTER(
			    temp_tbl,
			    ssr_history[step_name]="Untouched" && ssr_history[step_success]=True
			)
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 93551c73-43e4-47e0-96be-58352f7a6b84

	measure 'meas.rep_details_touched_accts_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_touched_accts_count],
			    "current", [meas.current_week_touched_accts_count],            // put the calls count based on the tiers
			    "last", [meas.last_week_touched_accts_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 856a53f6-9734-44b1-9dc8-da57213cf2b6

	measure 'meas.last_week_opps_count' =
			
			VAR _lastWeekStart = [meas.current_week_start] - 7          // gte the last week start date
			VAR _lastWeekEnd   = [meas.current_week_start] - 1          // get the last week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the last week data
			        cal_end_dates[Date] >= _lastWeekStart && cal_end_dates[Date] <= _lastWeekEnd
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 4999b375-0b0c-45df-89c2-18363a638998

	measure 'meas.current_week_opps_count' =
			
			VAR _current_weekStart = [meas.current_week_start]           // gte the current week start date
			VAR _current_weekEnd   = _current_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,          // filter the table to get the current week lost opps count
			        cal_end_dates[Date] >= _current_weekStart && cal_end_dates[Date] <= _current_weekEnd
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: 814ce85c-f075-4ec5-a768-df50c08dd13a

	measure 'meas.next_week_opps_count' =
			
			VAR _next_weekStart = [meas.current_week_start]+7           // gte the current week start date
			VAR _next_weekEnd   = _next_weekStart + 6        // get the current week end date
			
			VAR temp_tbl =
			    CALCULATETABLE(
			        opps,             // filter the table to get the next week  won _opps count
			        cal_end_dates[Date] >= _next_weekStart && cal_end_dates[Date] <= _next_weekEnd
			
			    )
			
			var res =  COUNTX(temp_tbl, [_sys_doc_id])
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details_activity
		lineageTag: e716b696-6017-4f2b-a8f3-57de4ed2ecfc

	measure 'meas.rep_details_opps_count' =
			
			var _week_name = MAX(rep_details_week[week_start])          // get the weekly tiers
			var res = SWITCH(
			    _week_name,
			    "upcoming", [meas.next_week_opps_count],
			    "current", [meas.current_week_opps_count],            // put the opps count based on the tiers
			    "last", [meas.last_week_opps_count]
			)
			
			RETURN
			res
		formatString: 0
		displayFolder: _rep_details
		lineageTag: be179669-3a7f-483f-9c02-aeee0ef2877a

	measure 'meas.rep_details_rep_title' =
			
			CALCULATE(MAX(users[trueai_title]))            /// get the users title
		displayFolder: _rep_details
		lineageTag: 01894366-9cc4-4c8d-90b0-c74b500f7fc1

	measure 'meas.rep_details_rep_group' =
			
			CALCULATE(MAX(users[trueai_group]))            /// get the users title
		displayFolder: _rep_details
		lineageTag: 15e99297-7444-4213-a48d-3d910ff10cad

	measure 'meas.rep_details_rep_manager_name' =
			CALCULATE(
			    MAX(managers_direct[crm_first_name]) & " " & MAX(managers_direct[crm_last_name]),
			    managers_direct[trueai_is_mgr]=True
			)
		displayFolder: _rep_details
		lineageTag: c82fbced-ceda-4b4a-9735-63791160a2ae

	measure 'meas.rep_details_rep_name' =
			
			CALCULATE(
			    MAX(users[trueai_full_name])           // get the rep name
			)
		displayFolder: _rep_details
		lineageTag: 249323cd-f7bf-40cd-a557-793805cf24e9

	measure 'meas.rep_details_rep_role' =
			
			CALCULATE(
			    MAX(users[trueai_user_role_alias])           // get the rep user role
			)
		displayFolder: _rep_details
		lineageTag: 7461c884-91ce-4fa7-999d-20cc678bb6d4

	measure 'meas.rep_details_user_pipeline_amt_peers_rank_mtd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_generated_pipeline_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_mtd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: 00a582ae-f358-4c91-9b5f-1b0aea4d6d0f

	measure 'meas.rep_details_user_pipeline_amt_peers_rank_qtd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_generated_pipeline_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_qtd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			
			
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: 86e9d087-73f0-4243-95f1-4d4df41d0548

	measure 'meas.rep_details_user_pipeline_amt_peers_rank_ytd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_generated_pipeline_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_ytd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: eb991d85-dfe6-492f-885f-33e84e8709ff

	measure 'meas.rep_details_user_booking_amt_peers_rank_mtd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_won_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_mtd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: 63e8453c-21f8-4ded-8249-f68c15d3a99f

	measure 'meas.rep_details_user_booking_amt_peers_rank_qtd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_won_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_qtd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: 8c270593-275a-4f77-9ab7-657700116ed2

	measure 'meas.rep_details_user_booking_amt_peers_rank_ytd' = ```
			
			var curr_date = CALCULATE(MAX(cal_end_dates[Date])) // get the mgmt current end date
			var end_date = curr_date
			var end_date_sply = date(Year(end_date) -1,Month(end_date),day(end_date)) // get the yoy end date
			var start_year = Year(curr_date) 
			var start_qtr_month = (Quarter(curr_date) * 3) - 2  
			var start_month = Month(curr_date)
			var start_date_ytd = date(start_year,1,1)    
			var start_date_qtd = date(start_year,start_qtr_month ,1)   
			var start_date_mtd = date(start_year,start_month,1) 
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_won_amt],
			            REMOVEFILTERS('cal_end_dates'),
			            'cal_end_dates'[Date] >= start_date_ytd &&
			            'cal_end_dates'[Date] <= end_date
			        )
			    )
			
			VAR peers_with_rank =
			    ADDCOLUMNS(
			        peers_with_scores,
			        "Rank",
			        RANKX(
			            peers_with_scores,
			            [PeerScore],
			            ,
			            DESC,
			            Dense
			        )
			    )
			
			VAR selected_user_name = current_user
			
			VAR selected_user_rank =
			    MAXX(
			        FILTER(
			            peers_with_rank,
			            users[trueai_full_name] = selected_user_name
			        ),
			        [Rank]
			    )
			    
			var res =IF(
			    total_reps=BLANK() || total_reps=0,
			    "-",
			    "Peer Ranking: "& selected_user_rank & " ("& total_reps & ")"
			)
			RETURN
			res
			```
		displayFolder: _rep_details
		lineageTag: 1407e59a-4176-4f5e-829b-76850aa2965c

	measure 'meas.rep_details_user_combined_success_prob' = ```
			
			VAR rep_name = SELECTEDVALUE(users[trueai_full_name])
			
			VAR _rep_success =
			    CALCULATE(
			        [meas.ssr_history_success_prob_avg],
			        users[trueai_full_name] = rep_name         // indiviual rep success prob
			    )
			var res = IF(
			    _rep_success=BLANK(),
			    "-",
			    FORMAT(_rep_success, "0%")
			)
			RETURN 
			res
			```
		displayFolder: _rep_details
		lineageTag: 644b519d-f01b-433f-af44-8eae168616a6

	measure 'meas.rep_details_user_combined_success_prob_w_peers' =
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_success_prob_avg],
			            REMOVEFILTERS('cal_end_dates')
			        )
			    )
			
			
			var _rep_success = AVERAGEX(peers_with_scores, [PeerScore])
			var res = IF(
			    _rep_success=BLANK(),
			    "-",
			    FORMAT(_rep_success, "0%")
			)
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 9d610308-d975-483a-befe-a6e495b9d9a6

	measure 'meas.rep_details_generated_pipeline_amt' =
			
			
			var _amt = CALCULATE(
			    SUM(
			        ssr_history[opp_pipeline_amt]
			    ),
			    ssr_history[step_success] = true && ssr_history[step_name] in {"Prospecting", "Post-Sales Support"}
			)
			var res = IF(
			    _amt=BLANK(),
			    "-",
			    _amt
			)
			
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 49b1837a-b6ba-41f5-9f6a-7838f824a203

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_booking_amt' =
			
			var _amt = CALCULATE(
			    SUM(ssr_history[opp_won_amt])
			)
			
			var res = IF(
			    _amt=BLANK(),
			    "-",
			    _amt
			)
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 65168e0d-9423-45fb-807a-4691b3e54788

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_last_quarter_perf' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var perf_tier_num = CALCULATE(
			    AVERAGE(
			        users_history[ci_perf_qtly_performance_tier_num]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of qrtly perf tier number
			)  
			var rounded_num = ROUND(perf_tier_num, 0)           // rounding the avg number with o decimal point
			
			var ramp_status = [meas.data_logs_users_ramping_status]
			
			RETURN
			 IF(
			    MAX(users[trueai_user_role_dept])<>"SALES",
			    "Not in Sales Team",        // result if the user not in sales team
			    IF(
			        MAX(users[trueai_user_role_dept])="SALES" && ramp_status="Ramping",
			        "Ramping",          // if the ci_perf_ramping status is ramping then user status 
			        IF(
			            MAX(users[trueai_user_role_dept])="SALES" && ramp_status ="Ramped",
			            SWITCH(
			                TRUE(),
			                rounded_num =1 ,  "Underperformer",
			                rounded_num =2 ,  "Performer",                       // putting an condition to get the performance 
			                rounded_num = 3 , "Overperformer",
			                "N/A"
			            )
			        )
			    )
			 )
			```
		displayFolder: _rep_details
		lineageTag: 71b91bf5-725b-445d-9d5f-6a3b2bd48086

	measure 'meas.ssr_history_sel_rep_details_open_leads' = ```
			
			
			var sel_date = [meas.sel_date] // get the selected date 
			
			var temp_tbl = CALCULATETABLE(ssr_history ,  cal_end_dates[Date] <= date(2100,1,1) ) // start by filtering the table to the appropriate period and override the end date to include open item,s 
			
			var filter_tbl  =
			FILTER (
			    temp_tbl,
			    ssr_history[_sys_doc_id] = 
			    CALCULATE (
			          MAX ( ssr_history[_sys_doc_id] ),
			        FILTER (
			            all(ssr_history),
			            ssr_history[_sys_ssr_id] = EARLIER ( ssr_history[_sys_ssr_id] ) // this checks all the other values if it is the relevant one
			            &&  ssr_history[step_end_date] < sel_date &&  ssr_history[_sys_filt_start_date] < sel_date  // this ensures that we exclude anything after the selected date - important!  this measure is doing both step outcome and trueai added on date filtering 
			        )
			    )
			)
			Var res  = countx(filter_tbl,[_sys_doc_id] )
			RETURN res
			```
		formatString: 0
		displayFolder: _rep_details
		lineageTag: 29fdbf64-2012-439c-8d4e-31e052751bcb

	measure 'meas.rep_details_prior_3months_prospecting_time' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var _time = CALCULATE(
			    AVERAGE(
			        users_history[ci_time_alloc_prospecting]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of prospecting time alloc
			)  
			
			RETURN
			_time
			```
		displayFolder: _rep_details
		lineageTag: 1667ccbb-1de5-4436-8c33-9a6d02b13aee

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prior_3months_new_logo_time' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var _time = CALCULATE(
			    AVERAGE(
			        users_history[ci_time_alloc_new_logo]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of new logo time alloc
			)  
			
			RETURN
			_time
			```
		displayFolder: _rep_details
		lineageTag: 8958094d-8dc3-4ac0-b86f-f8d813a7d2a3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prior_3months_post_sales_time' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var _time = CALCULATE(
			    AVERAGE(
			        users_history[ci_time_alloc_post_sales]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of post sales  time alloc
			)  
			
			RETURN
			_time
			```
		displayFolder: _rep_details
		lineageTag: f09d8d16-5693-4d2b-8d20-07817d46c19f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prior_3months_existing_customer_time' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var _time = CALCULATE(
			    AVERAGE(
			        users_history[ci_time_alloc_existing_customer_selling]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of existing customer time alloc
			)  
			
			RETURN
			_time
			```
		displayFolder: _rep_details
		lineageTag: 78dd39a7-2eec-44d6-a370-2271c9f0eb95

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prior_3months_internal_time' = ```
			
			-- get the dates
			var end_date = [meas.last_date_of_previous_quarter] // get the mgmt current end date
			var start_date = EDATE(end_date, -3) // get the start date from end_date
			
			
			var _time = CALCULATE(
			    AVERAGE(
			        users_history[ci_time_alloc_internal]
			    ), 
			    cal_end_dates[Date] >= start_date && cal_end_dates[Date] <= end_date        // get the avg of internel time alloc
			)  
			
			RETURN
			_time
			```
		displayFolder: _rep_details
		lineageTag: 99f1eaa2-caf7-40b2-95aa-871a51d88e0b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_user_pi_timelineness_avg' =
			
			
			var res = CALCULATE(AVERAGE(users_history[ci_act_capt_lvl_pi_timeliness]))          // get the avergae
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 034774b7-0aef-4260-b663-91d048e2c7f3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_current_month_new_logo_purpose_dur' = ```
			
			VAR _selected_date = [meas.context_date_max]  // get the context max date
			VAR _month_start = DATE(YEAR(_selected_date), MONTH(_selected_date), 1)         // calculate the start of the selected month
			VAR _days_elapsed = DATEDIFF(_month_start, _selected_date, DAY) + 1         // count the days passed
			VAR _weeks_elapsed = DIVIDE(_days_elapsed, 7)               // get the week 
			
			VAR _total_duration = CALCULATE(
			    SUM(users_activities[trueai_purpose_new_logo_dur]),
			    users_activities[_sys_filt_end_date] >= _month_start &&         // calculate the ttoal duration
			    users_activities[_sys_filt_end_date] <= _selected_date
			)
			
			VAR _total_hours = DIVIDE(_total_duration, 3600)  // convert seconds to hours           
			VAR _average_per_week = DIVIDE(_total_hours, _weeks_elapsed)            // get the average duration per week
			
			RETURN
			_average_per_week
			```
		displayFolder: _rep_details
		lineageTag: fef1a75d-9e85-47ee-bd33-a1a0ef97501d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.peer_rank_per_user_mtd' = ```
			
			VAR current_user = SELECTEDVALUE(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			VAR start_date_mtd =
			    DATE(YEAR(TODAY()), MONTH(TODAY()), 1)
			
			VAR end_date = CALCULATE(MAX(cal_end_dates[Date]))
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peer_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_generated_pipeline_amt],
			            cal_end_dates[Date] >= start_date_mtd &&
			            cal_end_dates[Date] <= end_date
			        )
			    )
			
			VAR current_user_score =
			    CALCULATE(
			        [meas.ssr_history_generated_pipeline_amt],
			        cal_end_dates[Date] >= start_date_mtd &&
			        cal_end_dates[Date] <= end_date
			    )
			
			VAR _rank =
			    RANKX(
			        peer_scores,
			        [PeerScore],
			        current_user_score,
			        DESC,
			        DENSE
			    )
			
			VAR total_peers = COUNTROWS(peers_table)
			
			RETURN
			"Peer Ranking: " & _rank & " (" & total_peers & ")"
			
			```
		displayFolder: _rep_details
		lineageTag: ef950a8d-520b-4c61-aab4-69d25b208011

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'User Rank' =
			
			
			VAR current_user = MAX(users[trueai_full_name])
			
			VAR current_group =
			    LOOKUPVALUE(users[trueai_group], users[trueai_full_name], current_user)
			
			VAR current_role =
			    LOOKUPVALUE(users[trueai_user_role_alias], users[trueai_full_name], current_user)
			
			var total_reps  = COUNTROWS(
			    FILTER(
			        ALL(users),  -- <== This is the key part
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			)
			
			VAR peers_table =
			    FILTER(
			        ALL(users),
			        users[trueai_user_role_alias] = current_role &&
			        users[trueai_group] = current_group
			    )
			
			VAR peers_with_scores =
			    ADDCOLUMNS(
			        peers_table,
			        "PeerScore",
			        CALCULATE(
			            [meas.ssr_history_success_prob_avg],
			            REMOVEFILTERS('cal_end_dates')
			        )
			    )
			
			
			var res = AVERAGEX(peers_with_scores, [PeerScore])
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 38e98885-5e87-4352-8199-058670e7765e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_current_month_prospecting_purpose_dur' = ```
			
			VAR _selected_date = [meas.context_date_max]  // get the context max date
			VAR _month_start = DATE(YEAR(_selected_date), MONTH(_selected_date), 1)         // calculate the start of the selected month
			VAR _days_elapsed = DATEDIFF(_month_start, _selected_date, DAY) + 1         // count the days passed
			VAR _weeks_elapsed = DIVIDE(_days_elapsed, 7)               // get the week 
			
			VAR _total_duration = CALCULATE(
			    SUM(users_activities[trueai_purpose_prospecting_dur]),
			    users_activities[_sys_filt_end_date] >= _month_start &&         // calculate the ttoal duration
			    users_activities[_sys_filt_end_date] <= _selected_date
			)
			
			VAR _total_hours = DIVIDE(_total_duration, 3600)  // convert seconds to hours           
			VAR _average_per_week = DIVIDE(_total_hours, _weeks_elapsed)            // get the average duration per week
			
			RETURN
			_average_per_week
			```
		displayFolder: _rep_details
		lineageTag: 3fa49c8f-4f69-49df-94d6-bfe932561be7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_current_month_post_sales_purpose_dur' = ```
			
			VAR _selected_date = [meas.context_date_max]  // get the context max date
			VAR _month_start = DATE(YEAR(_selected_date), MONTH(_selected_date), 1)         // calculate the start of the selected month
			VAR _days_elapsed = DATEDIFF(_month_start, _selected_date, DAY) + 1         // count the days passed
			VAR _weeks_elapsed = DIVIDE(_days_elapsed, 7)               // get the week 
			
			VAR _total_duration = CALCULATE(
			    SUM(users_activities[trueai_purpose_post_sales_dur]),
			    users_activities[_sys_filt_end_date] >= _month_start &&         // calculate the ttoal duration
			    users_activities[_sys_filt_end_date] <= _selected_date
			)
			
			VAR _total_hours = DIVIDE(_total_duration, 3600)  // convert seconds to hours           
			VAR _average_per_week = DIVIDE(_total_hours, _weeks_elapsed)            // get the average duration per week
			
			RETURN
			_average_per_week
			```
		displayFolder: _rep_details
		lineageTag: 38730ce8-9965-4a44-98c5-a4a95c2d35c7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_current_month_existing_customer_purpose_dur' = ```
			
			VAR _selected_date = [meas.context_date_max]  // get the context max date
			VAR _month_start = DATE(YEAR(_selected_date), MONTH(_selected_date), 1)         // calculate the start of the selected month
			VAR _days_elapsed = DATEDIFF(_month_start, _selected_date, DAY) + 1         // count the days passed
			VAR _weeks_elapsed = DIVIDE(_days_elapsed, 7)               // get the week 
			
			VAR _total_duration = CALCULATE(
			    SUM(users_activities[trueai_purpose_exist_cust_selling_dur]),
			    users_activities[_sys_filt_end_date] >= _month_start &&         // calculate the ttoal duration
			    users_activities[_sys_filt_end_date] <= _selected_date
			)
			
			VAR _total_hours = DIVIDE(_total_duration, 3600)  // convert seconds to hours           
			VAR _average_per_week = DIVIDE(_total_hours, _weeks_elapsed)            // get the average duration per week
			
			RETURN
			_average_per_week
			```
		displayFolder: _rep_details
		lineageTag: 1ebbdec1-ae70-4826-9e3c-af11222166e6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_current_month_internal_purpose_dur' = ```
			
			VAR _selected_date = [meas.context_date_max]  // get the context max date
			VAR _month_start = DATE(YEAR(_selected_date), MONTH(_selected_date), 1)         // calculate the start of the selected month
			VAR _days_elapsed = DATEDIFF(_month_start, _selected_date, DAY) + 1         // count the days passed
			VAR _weeks_elapsed = DIVIDE(_days_elapsed, 7)               // get the week 
			
			VAR _total_duration = CALCULATE(
			    SUM(users_activities[trueai_purpose_internal_dur]),
			    users_activities[_sys_filt_end_date] >= _month_start &&         // calculate the ttoal duration
			    users_activities[_sys_filt_end_date] <= _selected_date
			)
			
			VAR _total_hours = DIVIDE(_total_duration, 3600)  // convert seconds to hours           
			VAR _average_per_week = DIVIDE(_total_hours, _weeks_elapsed)            // get the average duration per week
			
			RETURN
			_average_per_week
			```
		displayFolder: _rep_details
		lineageTag: 9707a73a-f8b2-4149-a3b5-550faec43bba

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_month_new_logo_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 1, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -1)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_new_logo_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: c68b243b-6049-4ae0-92af-3b75db67edd3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_month_prospecting_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 1, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -1)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_prospecting_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 5225354d-af09-40a9-bc50-c9278b427130

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_month_post_sales_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 1, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -1)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_post_sales_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: af8b57e1-01c8-4bce-b5f9-d0f932655531

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_month_existing_customer_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 1, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -1)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_exist_cust_selling_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: e38398e7-0d1b-4346-956a-0b5f6427d945

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_month_internel_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 1, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -1)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_internal_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 6b7514f8-dca5-4d90-951e-e6efa64525af

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_last_month_new_logo_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 2, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -2)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_new_logo_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: a7fc2b26-9164-4f47-9a33-2440f7481108

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_last_month_prospecting_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 2, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -2)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_prospecting_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 8ef1c014-5007-40ed-a357-6c8b89680078

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_last_month_post_sales_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 2, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -2)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_post_sales_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: 6618a672-a8e6-4f01-a2e7-33b883faec0a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_last_month_existing_cutomer_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 2, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -2)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_exist_cust_selling_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: b3661127-14ad-4157-94d1-137826905653

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.rep_details_prev_last_month_internal_purpose_dur' =
			
			var _max_date = CALCULATE(MAX(cal_end_dates[Date]))
			VAR _prev_month_start = DATE(YEAR(_max_date), MONTH(_max_date) - 2, 1)
			VAR _prev_month_end = EOMONTH(_max_date, -2)
			
			var total_time = CALCULATE(
			    SUM(users_activities[trueai_purpose_internal_dur]),         // get the purpose time dur
			    users_activities[_sys_filt_end_date] >=_prev_month_start && users_activities[_sys_filt_end_date] <=_prev_month_end
			)
			var hours_monthly = DIVIDE(total_time, 3600 )            // converting hours
			var res = DIVIDE(hours_monthly, 4) // converting into weekly avg considering 1 month = 4 weeks
			
			RETURN
			res
		displayFolder: _rep_details
		lineageTag: d2d364fd-d732-48fc-b3fb-effc74154483

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column week_start
		dataType: string
		lineageTag: 704d65c8-ed35-43f2-afd0-079cd65713ab
		summarizeBy: none
		sourceColumn: week_start
		sortByColumn: sequence

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column sequence
		dataType: int64
		formatString: 0
		lineageTag: 5d10acd4-03b1-461e-b477-c3ff08b68521
		summarizeBy: sum
		sourceColumn: sequence

		annotation SummarizationSetBy = Automatic

	partition rep_details_week = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WKi1Izs/NzEtX0lEyVIrViVZKLi0qSs0rAfKNwPycxGIQx1gpNhYA", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [week_start = _t, sequence = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"week_start", type text}, {"sequence", Int64.Type}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

