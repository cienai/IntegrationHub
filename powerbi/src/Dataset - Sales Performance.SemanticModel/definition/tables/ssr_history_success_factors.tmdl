table ssr_history_success_factors
	lineageTag: 6d0d1645-2b04-4700-87d8-13fed799fb4d

	measure 'meas.ssr_history_success_prob_impact' =
			
			var _prob = CALCULATE(
			    AVERAGE(
			        ssr_history_success_factors[impact]        // get the average prob
			    )
			)
			
			var res = ROUND(_prob, 2)
			
			RETURN
			res
		formatString: +0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: 8c898ccc-8056-4912-ac3e-ce6afbb43143

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'meas.ssr_history_success_prob_impact_positive' =
			
			var positiveVal = CALCULATE(MAX(ssr_history_success_factors[impact]))
			RETURN
			IF(positiveVal > 0, positiveVal,BLANK())
		formatString: 0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: 565e0f38-f6ce-4548-a88e-9b6de987e2fa

	measure 'meas.ssr_history_success_prob_impact_negative' =
			
			var Val = CALCULATE(MAX(ssr_history_success_factors[impact]))
			RETURN
			IF(Val < 0, Val,BLANK())
		formatString: 0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: 9148a5ce-e1ea-4877-a07c-e9990c3e02af

	measure 'meas.ssr_history_success_prob_impact_neutral' =
			
			var positiveVal = CALCULATE(MAX(ssr_history_success_factors[impact]))
			RETURN
			IF(positiveVal = 0, positiveVal,BLANK())
		formatString: 0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: be309515-4d9a-4856-ad6a-8d0c3dad396e

	measure 'meas.ssr_history_success_prob_factors_count' = ```
			
			var res = CALCULATE(count(ssr_history_success_factors[_sys_doc_id]))
			RETURN res
			
			```
		formatString: #,0
		displayFolder: success_prob_factors
		lineageTag: ffbf4531-12c0-4a82-889e-ed353a5a1a5e

	measure 'meas.ssr_history_success_prob_factors_all_count' = ```
			
			var res = CALCULATE(count(ssr_history_success_factors[_sys_ssr_history_id]), ssr_history_success_factors[name] <> "aaa" &&  ssr_history_success_factors[value] <> "aaa" ) // get the count of all outside the filter
			RETURN res
			
			```
		formatString: 0
		displayFolder: success_prob_factors
		lineageTag: bb952828-5ff6-4ce1-8186-7124fb7627ac

	measure 'meas.ssr_history_success_prob_factors_pct' = ```
			
			
			// this is our old measure
			var res = DIVIDE([meas.ssr_history_success_prob_factors_count], [meas.ssr_history_success_prob_factors_all_count])  // ratio of the factors count
			RETURN res
			
			```
		formatString: #%
		displayFolder: success_prob_factors
		lineageTag: fbebdf1c-4075-4d59-9b9d-7cae7d96dee0

	measure 'meas.success_prob_factors_most_impact_str' = ```
			
			
			// changes for git check
			
			// // get most impct. 
			// VAR FactorImpactCount = 
			//     ADDCOLUMNS(
			//         SUMMARIZE(
			//             ssr_history_success_prob_factors, 
			//             ssr_history_success_prob_factors[name] ,ssr_history_success_prob_factors[value] ,
			//                         ssr_history_success_prob_factors[impact]
			//         ),
			//         "Count", CALCULATE(COUNTROWS(ssr_history_success_prob_factors))
			//     )
			// VAR RankedFactors = 
			//     ADDCOLUMNS(
			//         FactorImpactCount,
			//         "Rank", RANKX(ALL(FactorImpactCount), [impact] * 10000 + [Count], , DESC, Dense)
			//     )
			// VAR Top4Factors = 
			//     FILTER(
			//         RankedFactors,
			//         [Rank] <= 4
			//     )
			// RETURN
			//     CONCATENATEX(
			//         Top4Factors,
			//         ssr_history_success_prob_factors[name] & " (Impact: " & ssr_history_success_prob_factors[Impact] & ", Count: " & [Count] & ")",
			//         ", ",
			//         [Rank],
			//         ASC
			//     )
			```
		formatString: 0
		displayFolder: success_prob_factors
		lineageTag: d3d03bb1-d585-4650-afcf-21178f54a977

	measure 'meas.ssr_history_success_prob_feature_impact' = ```
			
			CALCULATE(
			    AVERAGEX(
			        ssr_history_success_factors, 
			        ssr_history_success_factors[feature_impact]        // get the average feature impact
			    )
			)
			```
		formatString: 0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: ca2857e0-3196-408f-8103-8b2b7f7460ba

	measure 'meas.ssr_history_success_prob_factors_pct_how_many' =
			
			
			var step_count = [meas.ssr_history_step_count]           // get the converted leads count from ssr_history table
			
			var _success_prob_count = [meas.ssr_history_success_prob_factors_count]         // get the success prob count from ssr_history success prob table
			
			
			var res = DIVIDE(_success_prob_count, step_count,0)     // get the ratio
			RETURN
			res
		formatString: 0%;-0%;0%
		displayFolder: success_prob_factors
		lineageTag: 0162ca58-4bf0-4d0b-8b9b-11e1cccf55ea

	measure 'meas.top_factor_name_by_impact' = ```
			
			VAR MaxImpact = 
			    MAXX(
			        'ssr_history_success_factors', 
			        'ssr_history_success_factors'[impact]
			    )
			-- Now find the corresponding name with that max impact
			RETURN
			CALCULATE(
			    MAX('ssr_history_success_factors'[name]),
			    'ssr_history_success_factors'[impact] = MaxImpact
			)
			
			```
		displayFolder: success_prob_factors
		lineageTag: f24a5b64-818e-42df-920a-3a818a663c56

	column _sys_doc_id
		dataType: string
		lineageTag: 9cb59373-1b86-4c62-88de-26ae0e1a56f7
		summarizeBy: none
		sourceColumn: _sys_doc_id

		annotation SummarizationSetBy = Automatic

	column _sys_ssr_history_id
		dataType: string
		lineageTag: c60453b3-97d7-45b1-ade6-aaacedf30c77
		summarizeBy: none
		sourceColumn: _sys_ssr_history_id

		annotation SummarizationSetBy = Automatic

	column step_name
		dataType: string
		lineageTag: 0a5aa9a4-f9e9-4e91-b840-87ef01567824
		summarizeBy: none
		sourceColumn: step_name

		annotation SummarizationSetBy = Automatic

	column model
		dataType: string
		lineageTag: 79f09f95-7f97-4047-a5ac-b15a8f77e0bf
		summarizeBy: none
		sourceColumn: model

		annotation SummarizationSetBy = Automatic

	column value
		dataType: string
		lineageTag: 54056493-5086-4eed-8225-4c96c25cdfda
		summarizeBy: none
		sourceColumn: value

		annotation SummarizationSetBy = Automatic

	column sig
		dataType: string
		lineageTag: 70f041a1-2749-4523-866e-3393830dd2ed
		summarizeBy: none
		sourceColumn: sig

		annotation SummarizationSetBy = Automatic

	column name
		dataType: string
		lineageTag: b1957e1b-78c4-4fc3-a1bf-d5bf4fa364b8
		summarizeBy: none
		sourceColumn: name

		annotation SummarizationSetBy = Automatic

	column impact
		dataType: double
		lineageTag: 7eb9e59b-0ac2-4acd-87b2-e2dde8374099
		summarizeBy: sum
		sourceColumn: impact

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column sort
		dataType: double
		lineageTag: 6c8fbedc-c97c-480d-9c39-a7d2864e6aa6
		summarizeBy: sum
		sourceColumn: sort

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column feature_impact
		dataType: double
		lineageTag: 8a7fb210-55ef-4152-9627-767e12a7e82c
		summarizeBy: sum
		sourceColumn: feature_impact

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column ordering_factor
		dataType: double
		lineageTag: ac867424-720b-4775-802f-be1578d81508
		summarizeBy: sum
		sourceColumn: ordering_factor

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column display
		dataType: boolean
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 37b1f614-1a72-45e8-aa6b-fa0a617884fb
		summarizeBy: none
		sourceColumn: display

		annotation SummarizationSetBy = Automatic

	partition ssr_history_success_factors = m
		mode: import
		source =
				let
				    // --- READ FROM DB ---
				    dbTable = getDBTable("ssr_history_success_factors"),
				
				    // --- RENAME COLUMNS TO MATCH LEGACY FIELDS ---
				    RenamedColumns = Table.RenameColumns(dbTable, {
				        {"_sys_ssr_history_id", "_sys_ssr_history_id"},
				        {"trueai_model_name", "model"},
				        {"trueai_value", "value"},
				        {"trueai_value_impact", "impact"},
				        {"trueai_value_impact_sign", "sig"},
				        {"trueai_factor_name", "name"},
				        {"trueai_sort", "sort"},
				        {"trueai_factor_impact", "feature_impact"},
				        {"trueai_ordering_factor", "ordering_factor"},
				        {"trueai_ssr_history_name", "step_name"},
				        {"trueai_is_significant", "display"}
				    }),
				
				    // --- SAFE TYPE CASTING ---
				    CastedTable = Table.TransformColumns(RenamedColumns, {
				        {"_sys_ssr_history_id", each try Text.From(_) otherwise null, type text},
				        {"display", each try Logical.From(_) otherwise null, type logical},
				        {"feature_impact", each try Number.From(_) otherwise null, type number},
				        {"impact", each try Number.From(_) otherwise null, type number},
				        {"model", each try Text.From(_) otherwise null, type text},
				        {"name", each try Text.From(_) otherwise null, type text},
				        {"sig", each try Text.From(_) otherwise null, type text},
				        {"sort", each try Number.From(_) otherwise null, type number},
				        {"step_name", each try Text.From(_) otherwise null, type text},
				        {"value", each try Text.From(_) otherwise null, type text}
				    })
				in
				    CastedTable

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

