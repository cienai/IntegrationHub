table metadata_rule_list
	lineageTag: e7287056-7315-4540-8d9e-1a4360af9287

	measure 'meas.current_model_rule_count' = ```
			
			VAR _idText = SELECTEDVALUE(metadata_rule_list[_sys_doc_id])  
			VAR _model  = SELECTEDVALUE(metadata_rule_list[model])
			VAR _count =
			    IF(
			        ISBLANK(_idText),
			        BLANK(),
			        SWITCH(
			            _model,
			            "CompaniesListPriceStats",
			                CALCULATE( COUNT(opp_line_items[_sys_doc_id]),
			                           FORMAT(opp_line_items[trueai_list_price_rule], "0") = _idText ) + 0,
			            "CurrencyConversion",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_booking_amt_currency_rule], "0") = _idText ) + 0,
			            "OppsBookingAmt",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_booking_amt_rule], "0") = _idText ) + 0,
			            "OppsCreatedon",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_created_on_rule], "0") = _idText ) + 0,
			            "OppsCloseDate",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_close_date_rule], "0") = _idText ) + 0,
			            "OppsCreatorid",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_creator_id_rule], "0") = _idText ) + 0,
			            "OppsMasterId",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_account_id_rule], "0") = _idText ) + 0,
			            "OppsStartDate",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_start_date_rule], "0") = _idText ) + 0,
			            "OppHistoriesActivityStats",
			                CALCULATE( COUNT(open_pipeline[_sys_doc_id]),
			                           FORMAT(open_pipeline[trueai_act_adj_dur_rule], "0") = _idText ) + 0,
			            "OppsOwnerid",
			                CALCULATE( COUNT(opps[_sys_doc_id]),
			                           FORMAT(opps[trueai_owner_id_rule], "0") = _idText ) + 0,
			
			            "SsrHistoryEndPostSalesSupportRecycled",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_end_rule], "0") = _idText ) + 0,
			            "SsrHistoryOwnershipPostSalesSupportRecycled",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_owner_rule], "0") = _idText ) + 0,
			            "SsrHistoryAdjDuration",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[stkhlds_all_adj_dur_rule], "0") = _idText ) + 0,
			            "SsrHistoryEndLeadGen",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_end_rule], "0") = _idText ) + 0,
			            "SsrHistoryOutcomeLeadGen",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_outcome_rule], "0") = _idText ) + 0,
			            "SsrHistoryOutcomePostSalesSupport",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_outcome_rule], "0") = _idText ) + 0,
			            "SsrHistoryOutcomeProspecting",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_outcome_rule], "0") = _idText ) + 0,
			            "SsrHistoryOutcomeRecycled",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_outcome_rule], "0") = _idText ) + 0,
			            "SsrHistoryOutcomeSelling",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_outcome_rule], "0") = _idText ) + 0,
			            "SsrHistoryOwnershipLeadGen",
			                CALCULATE( COUNT(ssr_history[_sys_doc_id]),
			                           FORMAT(ssr_history[step_owner_rule], "0") = _idText ) + 0,
			
			            "UsersGroup",
			                CALCULATE( COUNT(users[_sys_doc_id]),
			                           FORMAT(users[trueai_group_rule], "0") = _idText ) + 0,
			            "UsersHrInfo",
			                CALCULATE( COUNT(users[_sys_doc_id]),
			                           FORMAT(users[trueai_group_rule], "0") = _idText ) + 0,
			
			            "SsrType",
			                CALCULATE( COUNT(ssr[_sys_doc_id]),
			                           FORMAT(ssr[trueai_type_rule], "0") = _idText ) + 0,
			
			            BLANK()
			        )
			    )
			RETURN _count
			
			```
		formatString: 0
		lineageTag: 121f6b47-9e23-4594-8450-f70a37cd2fe2

	measure 'meas.current_model_rule_count_pct' =
			
			var res = DIVIDE(
			    [meas.current_model_rule_count],
			    [meas.current_model_rule_total_count]
			)
			
			
			RETURN
			res
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 69347496-5765-4f61-a05a-68d0410fc6f5

	measure 'meas.current_model_rule_total_count' = ```
			
			VAR _idNum = -999
			VAR _model = SELECTEDVALUE(metadata_rule_list[model])
			RETURN
			    SWITCH(
			        _model,
			
			        "CompaniesListPriceStats",
			            CALCULATE(
			                COUNTROWS(opp_line_items),
			                FILTER(
			                    ALL(opp_line_items),
			                    NOT ISBLANK( VALUE(opp_line_items[trueai_list_price_rule]) ) &&
			                    VALUE(opp_line_items[trueai_list_price_rule]) <> _idNum
			                )
			            ),
			
			        "CurrencyConversion",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_booking_amt_currency_rule]) ) &&
			                    VALUE(opps[trueai_booking_amt_currency_rule]) <> _idNum
			                )
			            ),
			
			        "OppsBookingAmt",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_booking_amt_rule]) ) &&
			                    VALUE(opps[trueai_booking_amt_rule]) <> _idNum
			                )
			            ),
			
			        "OppsCreatedon",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_created_on_rule]) ) &&
			                    VALUE(opps[trueai_created_on_rule]) <> _idNum
			                )
			            ),
			
			        "OppsCloseDate",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_close_date_rule]) ) &&
			                    VALUE(opps[trueai_close_date_rule]) <> _idNum
			                )
			            ),
			
			        "OppsCreatorid",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_creator_id_rule]) ) &&
			                    VALUE(opps[trueai_creator_id_rule]) <> _idNum
			                )
			            ),
			
			        "OppsMasterId",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_account_id_rule]) ) &&
			                    VALUE(opps[trueai_account_id_rule]) <> _idNum
			                )
			            ),
			
			        "OppsStartDate",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_start_date_rule]) ) &&
			                    VALUE(opps[trueai_start_date_rule]) <> _idNum
			                )
			            ),
			
			        "OppHistoriesActivityStats",
			            CALCULATE(
			                COUNTROWS(open_pipeline),
			                FILTER(
			                    ALL(open_pipeline),
			                    NOT ISBLANK( VALUE(open_pipeline[trueai_act_adj_dur_rule]) ) &&
			                    VALUE(open_pipeline[trueai_act_adj_dur_rule]) <> _idNum
			                )
			            ),
			
			        "OppsOwnerid",
			            CALCULATE(
			                COUNTROWS(opps),
			                FILTER(
			                    ALL(opps),
			                    NOT ISBLANK( VALUE(opps[trueai_owner_id_rule]) ) &&
			                    VALUE(opps[trueai_owner_id_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryEndPostSalesSupportRecycled",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_end_rule]) ) &&
			                    VALUE(ssr_history[step_end_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOwnershipPostSalesSupportRecycled",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_owner_rule]) ) &&
			                    VALUE(ssr_history[step_owner_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryAdjDuration",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[stkhlds_all_adj_dur_rule]) ) &&
			                    VALUE(ssr_history[stkhlds_all_adj_dur_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryEndLeadGen",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_end_rule]) ) &&
			                    VALUE(ssr_history[step_end_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOutcomeLeadGen",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_outcome_rule]) ) &&
			                    VALUE(ssr_history[step_outcome_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOutcomePostSalesSupport",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_outcome_rule]) ) &&
			                    VALUE(ssr_history[step_outcome_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOutcomeProspecting",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_outcome_rule]) ) &&
			                    VALUE(ssr_history[step_outcome_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOutcomeRecycled",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_outcome_rule]) ) &&
			                    VALUE(ssr_history[step_outcome_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOutcomeSelling",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_outcome_rule]) ) &&
			                    VALUE(ssr_history[step_outcome_rule]) <> _idNum
			                )
			            ),
			
			        "SsrHistoryOwnershipLeadGen",
			            CALCULATE(
			                COUNTROWS(ssr_history),
			                FILTER(
			                    ALL(ssr_history),
			                    NOT ISBLANK( VALUE(ssr_history[step_owner_rule]) ) &&
			                    VALUE(ssr_history[step_owner_rule]) <> _idNum
			                )
			            ),
			
			        "UsersGroup",
			            CALCULATE(
			                COUNTROWS(users),
			                FILTER(
			                    ALL(users),
			                    NOT ISBLANK( VALUE(users[trueai_group_rule]) ) &&
			                    VALUE(users[trueai_group_rule]) <> _idNum
			                )
			            ),
			
			        "UsersHrInfo",
			            CALCULATE(
			                COUNTROWS(users),
			                FILTER(
			                    ALL(users),
			                    NOT ISBLANK( VALUE(users[trueai_group_rule]) ) &&
			                    VALUE(users[trueai_group_rule]) <> _idNum
			                )
			            ),
			
			        "SsrType",
			            CALCULATE(
			                COUNTROWS(ssr),
			                FILTER(
			                    ALL(ssr),
			                    NOT ISBLANK( VALUE(ssr[trueai_type_rule]) ) &&
			                    VALUE(ssr[trueai_type_rule]) <> _idNum
			                )
			            ),
			
			        BLANK()
			    )
			
			```
		lineageTag: e2cd1325-8e71-4102-8c4d-34d74e9ef581

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.total_current_model_rule_count' =
			
			SUMX (
			    VALUES(metadata_rule_list[_sys_doc_id]),
			    [meas.current_model_rule_count]
			)
		formatString: 0
		lineageTag: 929a6388-223e-4c8a-afac-06213b5d11e0

	measure 'meas.total_current_model_rule_count_pct' =
			
			SUMX (
			    VALUES(metadata_rule_list[_sys_doc_id]),
			    [meas.current_model_rule_count_pct]
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 3a944d6c-35f0-48e0-b74d-96f0bb5c556b

	column _sys_doc_id
		dataType: string
		lineageTag: 98f9499c-7b93-4e8c-808e-d0ee0f376aad
		summarizeBy: none
		sourceColumn: _sys_doc_id

		annotation SummarizationSetBy = Automatic

	column description
		dataType: string
		lineageTag: 12a1251c-57a9-4d76-890e-c2b58e47ab2e
		summarizeBy: none
		sourceColumn: description

		annotation SummarizationSetBy = Automatic

	column model
		dataType: string
		lineageTag: fa4a8cfb-536e-4b96-995d-ef2492651f67
		summarizeBy: none
		sourceColumn: model

		annotation SummarizationSetBy = Automatic

	column rule_name
		dataType: string
		lineageTag: b22903a3-40b6-41f4-ad5f-942815c52bc0
		summarizeBy: none
		sourceColumn: rule_name

		annotation SummarizationSetBy = Automatic

	column is_default_rule
		dataType: string
		lineageTag: e83e0057-c9aa-42ec-89a5-b7ba1bdd1d43
		summarizeBy: none
		sourceColumn: is_default_rule

		annotation SummarizationSetBy = Automatic

	column 'col.rule_is_std_crm' = ```
			
			var rule_name = metadata_rule_list[rule_name] & "" // get the rele id
			var res =  If (rule_name in {
			    "OWNERSHIP_ACCOUNTS_CRM_OWNER",
			    "OWNERSHIP_ACCOUNTS_CRM_CREATOR",
			    "OWNERSHIP_LEADS_CRM_CREATOR",
			    "OWNERSHIP_OPPS_CRM_OWNER",
			    "OWNERSHIP_ACCOUNTS_CRM_OWNER",
			    "OWNERSHIP_LEADS_CRM_OWNER",
			    "OUTCOME_CRM_ISWON_FLAG_SET_FALSE",
			    "OUTCOME_CRM_ISWON_FLAG_SET_TRUE",
			    "OUTCOME_LEAD_CONVERTED",
			    "OUTCOME_NEW_ACCOUNT_CREATED",
			    "OUTCOME_NEW_LEAD_CREATED",
			    "END_LEADS_CRM_CONVERTED",    
			    "END_OPPS_CRM_CREATEDON",    
			    "END_ACCOUNTS_CRM_CREATEDON", 
			    "END_LEADS_CRM_CREATEDON",
			    "END_OPPS_CRM_CLOSED",
			    "END_OPPS_NO_HANDOFF_RETURNING_ML_CREATEDON", // tbd
			    "OUTCOME_POSTSELLING_UPSELLING_STARTED", // tbd
			    "OUTCOME_LEAD_CONVERTED", // tbd
			    "OUTCOME_PROSPECTING_ACTIVITY_RECORDED", // tbd
			    "END_LEADS_FIRST_ACTIVITY_RECORDED", // tbd
			
			    
			    "dd"
			    }
			, true,false) // get the crm ones
			return res
			
			
			
			```
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 4f406c3c-aa04-4a97-b3de-ab240a92363b
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	partition metadata_rule_list = m
		mode: import
		source = ```
				let
				  dbTable = getDBTable("metadata_rule_list"), // get the right table
				
				
				  dbTableTyped = Table.TransformColumnTypes(dbTable,{ // change types to what we're expecting
				   {"rule_name", type text}, 
				   {"_sys_doc_id", type text}, 
				   {"model", type text}, 
				   {"description", type text}
				
				
				
				  })
				in
				    dbTableTyped
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

