table strat_summary
	lineageTag: ed1b27bf-eb0f-4e9b-b221-10ffd26ab22c

	measure 'meas.strat_summary_delta_prev_period' = ```
			
			
			var fromDate =[meas.context_date_min] 
			var toDate = [meas.context_date_max] 
			var prev_fromDate =[meas.context_prev_period_min] 
			var prev_toDate = [meas.context_prev_period_max] 
			
			
			var curr_period_avg = CALCULATE(AVERAGE(strat_summary[key_metric_value]))
			var prev_period_avg = CALCULATE(AVERAGE(strat_summary[key_metric_value]) ,  cal_end_dates[Date] >= prev_fromDate &&     cal_end_dates[Date] <= prev_toDate)
			           
			var res =  DIVIDE(curr_period_avg - prev_period_avg, prev_period_avg) 
			
			return res 
			
			
			```
		formatString: +0%;-0%;0%
		lineageTag: 82e43cdd-6fc2-467b-bb4c-7674b260c804

		changedProperty = FormatString

	measure 'meas.strat_summary_score' = ```
			
			--var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			--var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -365) -- create a filter that applies last year
			var actual_val = CALCULATE(AVERAGE(strat_summary[key_metric_value])) -- get the avg key metric w/ the filter if applicable
			var ref_val = CALCULATE(AVERAGE(strat_summary[key_metric_reference])) -- get the reference value for the period
			var inverse = FIRSTNONBLANK( strat_summary[key_metric_inversed],1=1 ) -- is a lower value better?
			var coeff =  If(isBlank(CALCULATE(MAX(strat_summary[key_metric_coeff]))),1,CALCULATE(MAX(strat_summary[key_metric_coeff]))) -- get the approprirate cofff
			var score =(divide(actual_val,ref_val) ^ coeff) - 0.5 -- calculate a relative score compared to the reference value that's centered on 0.5
			var capped_score = MIN(0.95,MAX(0.05,score )) -- make sure the score never goes over/under 0-1
			var res =  if (inverse, 1 - capped_score, capped_score) // invert if needed 
			
			return   if(ISBLANK(actual_val), blank(), res )
			
			
			```
		lineageTag: d24f1d2f-3b43-4850-a366-3df70aa26def

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_trend_score' = ```
			
			
			 var delta =  [meas.strat_summary_delta_prev_period]
			 var delta_coeff = .6-- CALCULATE(AVERAGE(strat_summary[key_metric_trend_coeff]))
			 var score =  ((delta + 1 ) ^ delta_coeff) - 0.5
			 var capped_score =  MAX(0.05, MIN(0.95, score))
			 var res = capped_score
			 return res
			
			
			```
		lineageTag: 3d5b6690-0192-4c58-9bb5-4bdd921b2202

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_display_score' = ```
			strat_summary[meas.strat_summary_score] * 100
			
			```
		formatString: 0
		lineageTag: 900adbfe-b098-46b6-9e52-d2c67154d556

		changedProperty = FormatString

	measure 'meas.strat_summary_display_key_metric_pct' =
			
			CALCULATE(AVERAGE(strat_summary[key_metric_value]) )
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: f0422331-3943-4ca3-9d2f-58d99b0c36ac

		changedProperty = FormatString

	measure 'meas.strat_summary_score_display_eop' = ```
			
			var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -1) -- create a filter that applies last year
			var actual_val = CALCULATE(AVERAGE(strat_summary[key_metric_value]), filt) -- get the avg key metric w/ the filter if applicable
			var ref_val = CALCULATE(AVERAGE(strat_summary[key_metric_reference]), filt ) -- get the reference value for the period
			var inverse = FIRSTNONBLANK( strat_summary[key_metric_inversed],1=1 ) -- is a lower value better?
			var coeff =  If(isBlank(CALCULATE(MAX(strat_summary[key_metric_coeff]))),1,CALCULATE(MAX(strat_summary[key_metric_coeff]))) -- get the approprirate cofff
			var score =(divide(actual_val,ref_val) ^ coeff) - 0.5 -- calculate a relative score compared to the reference value that's centered on 0.5
			var capped_score = MIN(0.95,MAX(0.05,score )) -- make sure the score never goes over/under 0-1
			var res =  if (inverse, 1 - capped_score, capped_score) // invert if needed 
			
			return   if(ISBLANK(actual_val), blank(), res ) * 100
			
			
			
			```
		formatString: 0
		lineageTag: e2526f51-ac84-4165-94ac-3bafd28f860a

		changedProperty = FormatString

	measure 'meas.strat_summary_key_metric_display_pct_eop' =
			
			var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -30) -- create a filter that applies last year
			
			var res = CALCULATE(AVERAGE(strat_summary[key_metric_value]),filt) -- just get the avg value for the key metric
			return res
		formatString: 0%;-0%;0%
		lineageTag: 4fe3646e-f707-40da-8b35-26c270e96e09

		changedProperty = FormatString

	measure 'meas.strat_summary_display_reference_pct' =
			
			CALCULATE(AVERAGE(strat_summary[key_metric_reference]) )
		formatString: 0%;-0%;0%
		lineageTag: a77c2788-c85b-428c-8253-13e25284ee52

		changedProperty = FormatString

	measure 'meas.strat_summary_delta_12mo_eop' = ```
			
			
			var fromDate =[meas.context_date_max] - 90
			var toDate = [meas.context_date_max] 
			var prev_fromDate = [meas.context_date_max] - 90 - 365
			var prev_toDate = [meas.context_date_max] - 365
			
			
			var curr_period_avg = CALCULATE(AVERAGE(strat_summary[key_metric_value]) ,  cal_end_dates[Date] >= fromDate &&     cal_end_dates[Date] <= toDate)
			var prev_period_avg = CALCULATE(AVERAGE(strat_summary[key_metric_value]) ,  cal_end_dates[Date] >= prev_fromDate &&     cal_end_dates[Date] <= prev_toDate)
			           
			var res =  DIVIDE(curr_period_avg - prev_period_avg, prev_period_avg) 
			
			return res 
			
			
			```
		formatString: +0%;-0%;0%
		lineageTag: d15bb079-82a5-4e6b-a51b-bf25c3739dc5

		changedProperty = FormatString

	measure 'meas.strat_summary_key_metric_display_ratio_eop' =
			
			var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -30) -- create a filter that applies last year
			
			var res = CALCULATE(AVERAGE(strat_summary[key_metric_value]),filt) -- just get the avg value for the key metric
			return res
		formatString: #.0 ":1"
		lineageTag: cf15f1d9-55f4-4ce3-b3ef-8a6785348e61

		changedProperty = FormatString

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'meas.strat_summary_display_reference_ratio' =
			
			CALCULATE(AVERAGE(strat_summary[key_metric_reference]) )
		formatString: 0":1"
		lineageTag: 1bc2643f-9c54-4121-aa0e-0a47687a4d7e

		changedProperty = FormatString

	measure 'meas.strat_summary_concern_score' = ```
			
			var val_score = strat_summary[meas.strat_summary_score]
			var val_trend_score = strat_summary[meas.strat_summary_trend_score]
			
			var res = (val_score * val_trend_score ) ^ 0.5  
			return res
			```
		lineageTag: 4fe7cef8-6834-4cd2-afde-02df60c2998a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_concern_score_display' =
			
			var res = IF([meas.strat_summary_concern_score] > 0.66, "Low", IF([meas.strat_summary_concern_score] > 0.33, "Medium", "High"))
			return res
		lineageTag: e8d32342-6ef1-4d93-88c4-986a1f524e93

	measure 'meas.strat_summary_trend_display' =
			
			var res = IF([meas.strat_summary_trend_score] > 0.66, "Improving", IF([meas.strat_summary_trend_score] > 0.33, "Steady", "Declining"))
			return res
		lineageTag: 9432771d-5fb2-467d-924b-fa9d6c1041b4

	measure 'measure.strat_summary_industry_score_display' = 52
		formatString: 0
		lineageTag: 18b3dd43-84ac-49f4-8cd7-d2283175eed2

	measure 'meas.strat_summary_key_metric_display_hrs_eop' =
			
			var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -30) -- create a filter that applies last year
			
			var res = CALCULATE(AVERAGE(strat_summary[key_metric_value]),filt) -- just get the avg value for the key metric
			return res
		formatString: #,##0.0"hrs"
		lineageTag: dfea2bbc-332f-4098-8a4b-cebd5355a568

		changedProperty = FormatString

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'meas.strat_summary_key_metric_display_decimal_eop' =
			
			var max_date = cal_end_dates[meas.context_date_max] -- get the last date
			var filt = filter(cal_end_dates,cal_end_dates[Date] > max_date -30) -- create a filter that applies last year
			
			var res = CALCULATE(AVERAGE(strat_summary[key_metric_value]),filt) -- just get the avg value for the key metric
			return res
		formatString: #,##0.0
		lineageTag: 902ffaec-2d1d-40ef-8d4d-ed18e1f89e6f

		changedProperty = FormatString

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'meas.strat_summary_display_reference_hrs' =
			
			CALCULATE(AVERAGE(strat_summary[key_metric_reference]) )
		formatString: #,##0.0" hrs"
		lineageTag: 288edd56-dc77-461f-a6b8-4e5f3325257b

		changedProperty = FormatString

	measure 'meas.strat_summary_display_reference_decimal' =
			
			CALCULATE(AVERAGE(strat_summary[key_metric_reference]) )
		formatString: #,##0.0
		lineageTag: 0b85899b-d33f-4316-a84f-85b3efc5acb3

		changedProperty = FormatString

	measure 'meas.strat_summary_score_display_eop_existing_cust_exp' = ```
			
			CALCULATE(
				[meas.strat_summary_score_display_eop],
				'strat_summary'[summary_cat] IN { "Existing Customer Revenue" }
			)
			
			```
		lineageTag: 33430290-9c5e-405b-84e7-3d2a0a289077

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_score_display_eop_for_new_logo_sales' = ```
			
			CALCULATE(
				[meas.strat_summary_score_display_eop],
				'strat_summary'[summary_cat] IN { "New Logo Sales" }
			)
			
			```
		lineageTag: e4fcb2ff-37fa-470d-8456-9a2498a9ffa7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_score_display_eop_for_rep_perf' = ```
			
			CALCULATE(
				[meas.strat_summary_score_display_eop],
				'strat_summary'[summary_cat] IN { "Rep Performance" }
			)
			
			```
		lineageTag: 54bad410-5b58-49e4-b157-b94643407276

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_score_display_eop_for_sales_and_market' = ```
			
			CALCULATE(
				[meas.strat_summary_score_display_eop],
				'strat_summary'[summary_cat]
					IN { "Sales & Marketing Alignment" }
			)
			
			```
		lineageTag: b0a32b4e-3082-45c3-89da-dd1861e01461

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_score_display_eop_for_target_and_segment' = ```
			
			CALCULATE(
				[meas.strat_summary_score_display_eop],
				'strat_summary'[summary_cat] IN { "Targeting & Segmenting" }
			)
			
			```
		lineageTag: 9dcc1a6a-d26e-4dee-b408-a3f118fc332b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'meas.strat_summary_all_score' = ```
			
			var score = (strat_summary[meas.strat_summary_score_display_eop_existing_cust_exp] + strat_summary[meas.strat_summary_score_display_eop_for_new_logo_sales] 
			+ strat_summary[meas.strat_summary_score_display_eop_for_rep_perf] 
			+ strat_summary[meas.strat_summary_score_display_eop_for_sales_and_market]
			+ strat_summary[meas.strat_summary_score_display_eop_for_target_and_segment]
			) / 5 
			
			var res = round(score, 0)
			return res
			
			```
		lineageTag: 7d990357-1036-46de-b650-2b9a15e8103f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column _sys_docid
		lineageTag: 776d91c0-dc9d-47f5-9187-626563359320
		summarizeBy: none
		isNameInferred
		sourceColumn: [_sys_docid]

		annotation SummarizationSetBy = Automatic

	column _sys_user_id
		lineageTag: b522b9f2-de3d-4fb9-b3dd-b8234b5fab7a
		summarizeBy: none
		isNameInferred
		sourceColumn: [_sys_user_id]

		annotation SummarizationSetBy = Automatic

	column _sys_filter_end_date
		formatString: General Date
		lineageTag: efdd6fb6-28fe-4cf9-b214-7da47a01b262
		summarizeBy: none
		isNameInferred
		sourceColumn: [_sys_filter_end_date]

		annotation SummarizationSetBy = Automatic

	column summary_cat
		lineageTag: 37d8d845-231d-44c4-868c-974913754ed7
		summarizeBy: none
		isNameInferred
		sourceColumn: [summary_cat]

		annotation SummarizationSetBy = Automatic

	column summary_dimension
		lineageTag: 873b3a91-6726-4d34-ac25-43ac132cb79b
		summarizeBy: none
		isNameInferred
		sourceColumn: [summary_dimension]

		annotation SummarizationSetBy = Automatic

	column key_metric_name
		lineageTag: 8fd265f4-378e-47d3-81de-603e54118a42
		summarizeBy: none
		isNameInferred
		sourceColumn: [key_metric_name]

		annotation SummarizationSetBy = Automatic

	column dd
		formatString: 0
		lineageTag: fc14fe31-0ea7-4164-bff6-ec07bf9a53a4
		summarizeBy: sum
		isNameInferred
		sourceColumn: [dd]

		annotation SummarizationSetBy = Automatic

	column key_metric_value
		lineageTag: d249ae43-2d03-4090-aa4d-49dd78fdc2af
		summarizeBy: average
		isNameInferred
		sourceColumn: [key_metric_value]

		annotation SummarizationSetBy = User

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column key_metric_reference
		lineageTag: b78e1e91-ff2c-4d8e-a450-74650e87efe9
		summarizeBy: average
		isNameInferred
		sourceColumn: [key_metric_reference]

		annotation SummarizationSetBy = User

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column key_metric_inversed
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 3e57b584-8803-4854-99c3-e79b17e77b74
		summarizeBy: none
		isNameInferred
		sourceColumn: [key_metric_inversed]

		annotation SummarizationSetBy = Automatic

	column key_metric_coeff
		lineageTag: fa14b161-28d2-49f5-b2be-678ec68dcb35
		summarizeBy: sum
		isNameInferred
		sourceColumn: [key_metric_coeff]

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column key_metric_trend_coeff
		lineageTag: 8769dd8d-bb33-4cde-abd4-d3a1eb26b006
		summarizeBy: sum
		isNameInferred
		sourceColumn: [key_metric_trend_coeff]

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition strat_summary-0e8ef655-adf5-40d2-834c-3bf0b52e8e24 = calculated
		mode: import
		source = ```
				
				UNION(
				// lead - marketing & sales alignment
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Sales & Marketing Alignment",  
				 "summary_dimension", "Ignored Potential",  
				 "key_metric_name", "% of non-touched high-quality account",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2015) /6  * 0.1,  -- fake for now
				 "key_metric_reference", 0.15,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Sales & Marketing Alignment",  
				 "summary_dimension", "Sales vs. Marketing Lead Qual.",  
				 "key_metric_name", "Lead Value Ratio - Sales vs. Marketing ",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2011) /6  * 2,  -- fake for now
				 "key_metric_reference", 2.1,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Sales & Marketing Alignment",  
				 "summary_dimension", "Time to Lead",  
				 "key_metric_name", "Avg. time in h. response to inbound leads",  
				 "key_metric_value", 2.1,  -- fake for now
				 "key_metric_reference", 0.9,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Sales & Marketing Alignment",  
				 "summary_dimension", "Lead Quality",  
				 "key_metric_name", "Lead Conversion Prob",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date]) - 2015) /6  * 0.1,
				 "key_metric_reference", .2,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				 // tam - segmenting & targeting
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Targeting & Segmenting",  
				 "summary_dimension", "Lead & Account Actionability",  
				 "key_metric_name", "Avg. Completeness Score",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2015) /6  * 0.5,  -- fake for now
				 "key_metric_reference", 0.55,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Targeting & Segmenting",  
				 "summary_dimension", "Prospecting Time Management",  
				 "key_metric_name", "Time Ratio on Top 1/3 vs. Lowest 1/3 ",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2011) /6  * 2,  -- fake for now
				 "key_metric_reference", 2.1,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Targeting & Segmenting",  
				 "summary_dimension", "Target DB Size",  
				 "key_metric_name", "Ratio vs. Existing Customers",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date]) - 2015) /6  * 50,
				 "key_metric_reference", 100,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				"dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Targeting & Segmenting",  
				 "summary_dimension", "Rep Coverage",  
				 "key_metric_name", "Rep to Account Coverage",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date]) - 2015) /6  * 60,
				 "key_metric_reference", 100,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 // new logo sales
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "New Logo Sales",  
				 "summary_dimension", "Pipeline Quality",  
				 "key_metric_name", "Opp Win Probability",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2015) /3  * 0.1,  -- fake for now
				 "key_metric_reference", 0.15,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "New Logo Sales",  
				 "summary_dimension", "Pipeline Size",  
				 "key_metric_name", "YoY Coverage Ratio",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2011) /6  * 4,  -- fake for now
				 "key_metric_reference", 5.1,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "New Logo Sales",  
				 "summary_dimension", "Deal Size",  
				 "key_metric_name", "New Deal vs. avg. ACV",  
				 "key_metric_value", RAND() + 8 / 10,  -- fake for now
				 "key_metric_reference", 0.9,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "New Logo Sales",  
				 "summary_dimension", "Effort to Close",  
				 "key_metric_name", "Total Hours Per Won $1K",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date] )- 2011 ) /6   * 2,  -- fake for now
				 "key_metric_reference", 2.1,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 // Existing Customer Selling
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Existing Customer Revenue",  
				 "summary_dimension", "Pipeline Quality",  
				 "key_metric_name", "Opp Win Probability",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2015) /3  * 0.3,  -- fake for now
				 "key_metric_reference", 0.65,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Existing Customer Revenue",  
				 "summary_dimension", "Pipeline Size",  
				 "key_metric_name", "YoY Coverage Ratio",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2011) /6  * 4,  -- fake for now
				 "key_metric_reference", 5.1,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Existing Customer Revenue",  
				 "summary_dimension", "Revenue Concentration",  
				 "key_metric_name", "80% of Rev from X% of Account",  
				  "key_metric_value", RAND() + 8 / 10,  -- fake for now
				 "key_metric_reference", 0.9,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Existing Customer Revenue",  
				 "summary_dimension", "Effort to Close",  
				 "key_metric_name", "Total Hours Per Won $1K",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date] )- 2011 ) /6   * 2,  -- fake for now
				 "key_metric_reference", 2.1,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 // rep performance
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Rep Performance",  
				 "summary_dimension", "Ramping Success",  
				 "key_metric_name", "% of Reps Reached Quota in 12 mo.",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2015) /3  * 0.1,  -- fake for now
				 "key_metric_reference", 0.15,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				
				SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Rep Performance",  
				 "summary_dimension", "Top Performer Contribution",  
				 "key_metric_name", "80% of Rev from X% of Reps",  
				 "key_metric_value", (Year(ssr_history[_sys_filt_end_date]) - 2011) /6  * 4,  -- fake for now
				 "key_metric_reference", 5.1,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Rep Performance",  
				 "summary_dimension", "Rep Growth",  
				 "key_metric_name", "Rep to Revenue Growth Ratio",  
				 "key_metric_value", RAND() + 8 / 10,  -- fake for now
				 "key_metric_reference", 0.9,  -- fake for now
				 "key_metric_inversed", false,
				 "key_metric_coeff", 1,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 ),
				 SELECTCOLUMNS(ssr_history, 
				 "_sys_docid", ssr_history[_sys_doc_id],  
				 "_sys_user_id", ssr_history[step_owner_id], 
				 "_sys_filter_end_date", ssr_history[_sys_filt_end_date], 
				 "summary_cat", "Rep Performance",   
				 "summary_dimension", "Under Performnce",  
				 "key_metric_name", "% Underperformers",  
				 "key_metric_value",  (Year(ssr_history[_sys_filt_end_date] )- 2011 ) /6   * 2,  -- fake for now
				 "key_metric_reference", 2.1,  -- fake for now
				 "key_metric_inversed", true,
				 "key_metric_coeff", 0.5,
				 "key_metric_trend_coeff", 0.76,
				 "dd", 1
				 )
				)
				
				```

	annotation PBI_Id = 8463aa296e17484793094159cad55afa

